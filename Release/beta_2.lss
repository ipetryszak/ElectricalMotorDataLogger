
beta_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003f8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          0000002a  00800060  00800060  0000046c  2**0
                  ALLOC
  2 .comment      00000030  00000000  00000000  0000046c  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	21 c0       	rjmp	.+66     	; 0x46 <__bad_interrupt>
   4:	20 c0       	rjmp	.+64     	; 0x46 <__bad_interrupt>
   6:	61 c0       	rjmp	.+194    	; 0xca <__vector_3>
   8:	1e c0       	rjmp	.+60     	; 0x46 <__bad_interrupt>
   a:	1d c0       	rjmp	.+58     	; 0x46 <__bad_interrupt>
   c:	1c c0       	rjmp	.+56     	; 0x46 <__bad_interrupt>
   e:	1b c0       	rjmp	.+54     	; 0x46 <__bad_interrupt>
  10:	1a c0       	rjmp	.+52     	; 0x46 <__bad_interrupt>
  12:	19 c0       	rjmp	.+50     	; 0x46 <__bad_interrupt>
  14:	18 c0       	rjmp	.+48     	; 0x46 <__bad_interrupt>
  16:	17 c0       	rjmp	.+46     	; 0x46 <__bad_interrupt>
  18:	16 c0       	rjmp	.+44     	; 0x46 <__bad_interrupt>
  1a:	15 c0       	rjmp	.+42     	; 0x46 <__bad_interrupt>
  1c:	14 c0       	rjmp	.+40     	; 0x46 <__bad_interrupt>
  1e:	13 c0       	rjmp	.+38     	; 0x46 <__bad_interrupt>
  20:	12 c0       	rjmp	.+36     	; 0x46 <__bad_interrupt>
  22:	11 c0       	rjmp	.+34     	; 0x46 <__bad_interrupt>
  24:	10 c0       	rjmp	.+32     	; 0x46 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_clear_bss>:
  32:	20 e0       	ldi	r18, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	01 c0       	rjmp	.+2      	; 0x3c <.do_clear_bss_start>

0000003a <.do_clear_bss_loop>:
  3a:	1d 92       	st	X+, r1

0000003c <.do_clear_bss_start>:
  3c:	aa 38       	cpi	r26, 0x8A	; 138
  3e:	b2 07       	cpc	r27, r18
  40:	e1 f7       	brne	.-8      	; 0x3a <.do_clear_bss_loop>
  42:	87 d1       	rcall	.+782    	; 0x352 <main>
  44:	d7 c1       	rjmp	.+942    	; 0x3f4 <_exit>

00000046 <__bad_interrupt>:
  46:	dc cf       	rjmp	.-72     	; 0x0 <__vectors>

00000048 <initUSART>:
  48:	90 bd       	out	0x20, r25	; 32
  4a:	89 b9       	out	0x09, r24	; 9
  4c:	88 e9       	ldi	r24, 0x98	; 152
  4e:	8a b9       	out	0x0a, r24	; 10
  50:	86 e8       	ldi	r24, 0x86	; 134
  52:	80 bd       	out	0x20, r24	; 32
  54:	08 95       	ret

00000056 <sendUSART>:
  56:	5d 9b       	sbis	0x0b, 5	; 11
  58:	fe cf       	rjmp	.-4      	; 0x56 <sendUSART>
  5a:	8c b9       	out	0x0c, r24	; 12
  5c:	08 95       	ret

0000005e <uart_puts>:
  5e:	cf 93       	push	r28
  60:	df 93       	push	r29
  62:	ec 01       	movw	r28, r24
  64:	89 91       	ld	r24, Y+
  66:	88 23       	and	r24, r24
  68:	11 f0       	breq	.+4      	; 0x6e <uart_puts+0x10>
  6a:	f5 df       	rcall	.-22     	; 0x56 <sendUSART>
  6c:	fb cf       	rjmp	.-10     	; 0x64 <uart_puts+0x6>
  6e:	df 91       	pop	r29
  70:	cf 91       	pop	r28
  72:	08 95       	ret

00000074 <uart_putint>:
  74:	cf 93       	push	r28
  76:	df 93       	push	r29
  78:	cd b7       	in	r28, 0x3d	; 61
  7a:	de b7       	in	r29, 0x3e	; 62
  7c:	61 97       	sbiw	r28, 0x11	; 17
  7e:	0f b6       	in	r0, 0x3f	; 63
  80:	f8 94       	cli
  82:	de bf       	out	0x3e, r29	; 62
  84:	0f be       	out	0x3f, r0	; 63
  86:	cd bf       	out	0x3d, r28	; 61
  88:	ab 01       	movw	r20, r22
  8a:	be 01       	movw	r22, r28
  8c:	6f 5f       	subi	r22, 0xFF	; 255
  8e:	7f 4f       	sbci	r23, 0xFF	; 255
  90:	74 d1       	rcall	.+744    	; 0x37a <itoa>
  92:	ce 01       	movw	r24, r28
  94:	01 96       	adiw	r24, 0x01	; 1
  96:	e3 df       	rcall	.-58     	; 0x5e <uart_puts>
  98:	61 96       	adiw	r28, 0x11	; 17
  9a:	0f b6       	in	r0, 0x3f	; 63
  9c:	f8 94       	cli
  9e:	de bf       	out	0x3e, r29	; 62
  a0:	0f be       	out	0x3f, r0	; 63
  a2:	cd bf       	out	0x3d, r28	; 61
  a4:	df 91       	pop	r29
  a6:	cf 91       	pop	r28
  a8:	08 95       	ret

000000aa <initTimer2>:
  aa:	85 b5       	in	r24, 0x25	; 37
  ac:	88 60       	ori	r24, 0x08	; 8
  ae:	85 bd       	out	0x25, r24	; 37
  b0:	85 b5       	in	r24, 0x25	; 37
  b2:	84 60       	ori	r24, 0x04	; 4
  b4:	85 bd       	out	0x25, r24	; 37
  b6:	89 b7       	in	r24, 0x39	; 57
  b8:	80 68       	ori	r24, 0x80	; 128
  ba:	89 bf       	out	0x39, r24	; 57
  bc:	82 e5       	ldi	r24, 0x52	; 82
  be:	83 bd       	out	0x23, r24	; 35
  c0:	08 95       	ret

000000c2 <stopTimer2>:
  c2:	85 b5       	in	r24, 0x25	; 37
  c4:	8b 7f       	andi	r24, 0xFB	; 251
  c6:	85 bd       	out	0x25, r24	; 37
  c8:	08 95       	ret

000000ca <__vector_3>:
  ca:	1f 92       	push	r1
  cc:	0f 92       	push	r0
  ce:	0f b6       	in	r0, 0x3f	; 63
  d0:	0f 92       	push	r0
  d2:	11 24       	eor	r1, r1
  d4:	2f 93       	push	r18
  d6:	3f 93       	push	r19
  d8:	4f 93       	push	r20
  da:	5f 93       	push	r21
  dc:	6f 93       	push	r22
  de:	7f 93       	push	r23
  e0:	8f 93       	push	r24
  e2:	9f 93       	push	r25
  e4:	af 93       	push	r26
  e6:	bf 93       	push	r27
  e8:	ef 93       	push	r30
  ea:	ff 93       	push	r31
  ec:	98 d0       	rcall	.+304    	; 0x21e <startSampling>
  ee:	ff 91       	pop	r31
  f0:	ef 91       	pop	r30
  f2:	bf 91       	pop	r27
  f4:	af 91       	pop	r26
  f6:	9f 91       	pop	r25
  f8:	8f 91       	pop	r24
  fa:	7f 91       	pop	r23
  fc:	6f 91       	pop	r22
  fe:	5f 91       	pop	r21
 100:	4f 91       	pop	r20
 102:	3f 91       	pop	r19
 104:	2f 91       	pop	r18
 106:	0f 90       	pop	r0
 108:	0f be       	out	0x3f, r0	; 63
 10a:	0f 90       	pop	r0
 10c:	1f 90       	pop	r1
 10e:	18 95       	reti

00000110 <initSRAMControl>:
 110:	81 b3       	in	r24, 0x11	; 17
 112:	8c 61       	ori	r24, 0x1C	; 28
 114:	81 bb       	out	0x11, r24	; 17
 116:	82 b3       	in	r24, 0x12	; 18
 118:	8c 60       	ori	r24, 0x0C	; 12
 11a:	82 bb       	out	0x12, r24	; 18
 11c:	94 98       	cbi	0x12, 4	; 18
 11e:	08 95       	ret

00000120 <initLatch1>:
 120:	b8 9a       	sbi	0x17, 0	; 23
 122:	c0 98       	cbi	0x18, 0	; 24
 124:	08 95       	ret

00000126 <initLatch2>:
 126:	b9 9a       	sbi	0x17, 1	; 23
 128:	c1 98       	cbi	0x18, 1	; 24
 12a:	08 95       	ret

0000012c <dataPortOutput>:
 12c:	8f ef       	ldi	r24, 0xFF	; 255
 12e:	84 bb       	out	0x14, r24	; 20
 130:	81 b3       	in	r24, 0x11	; 17
 132:	80 66       	ori	r24, 0x60	; 96
 134:	81 bb       	out	0x11, r24	; 17
 136:	08 95       	ret

00000138 <dataPortInput>:
 138:	80 ec       	ldi	r24, 0xC0	; 192
 13a:	84 bb       	out	0x14, r24	; 20
 13c:	81 b3       	in	r24, 0x11	; 17
 13e:	8f 79       	andi	r24, 0x9F	; 159
 140:	81 bb       	out	0x11, r24	; 17
 142:	08 95       	ret

00000144 <setAddress>:
 144:	cf 93       	push	r28
 146:	df 93       	push	r29
 148:	00 d0       	rcall	.+0      	; 0x14a <setAddress+0x6>
 14a:	cd b7       	in	r28, 0x3d	; 61
 14c:	de b7       	in	r29, 0x3e	; 62
 14e:	89 83       	std	Y+1, r24	; 0x01
 150:	9a 83       	std	Y+2, r25	; 0x02
 152:	ec df       	rcall	.-40     	; 0x12c <dataPortOutput>
 154:	20 ec       	ldi	r18, 0xC0	; 192
 156:	25 bb       	out	0x15, r18	; 21
 158:	32 b3       	in	r19, 0x12	; 18
 15a:	3f 79       	andi	r19, 0x9F	; 159
 15c:	32 bb       	out	0x12, r19	; 18
 15e:	45 b3       	in	r20, 0x15	; 21
 160:	89 81       	ldd	r24, Y+1	; 0x01
 162:	38 2f       	mov	r19, r24
 164:	3f 73       	andi	r19, 0x3F	; 63
 166:	34 2b       	or	r19, r20
 168:	35 bb       	out	0x15, r19	; 21
 16a:	32 b3       	in	r19, 0x12	; 18
 16c:	80 7c       	andi	r24, 0xC0	; 192
 16e:	86 95       	lsr	r24
 170:	83 2b       	or	r24, r19
 172:	82 bb       	out	0x12, r24	; 18
 174:	c0 9a       	sbi	0x18, 0	; 24
 176:	c0 98       	cbi	0x18, 0	; 24
 178:	25 bb       	out	0x15, r18	; 21
 17a:	82 b3       	in	r24, 0x12	; 18
 17c:	8f 79       	andi	r24, 0x9F	; 159
 17e:	82 bb       	out	0x12, r24	; 18
 180:	35 b3       	in	r19, 0x15	; 21
 182:	9a 81       	ldd	r25, Y+2	; 0x02
 184:	89 2f       	mov	r24, r25
 186:	8f 73       	andi	r24, 0x3F	; 63
 188:	83 2b       	or	r24, r19
 18a:	85 bb       	out	0x15, r24	; 21
 18c:	82 b3       	in	r24, 0x12	; 18
 18e:	96 95       	lsr	r25
 190:	98 2b       	or	r25, r24
 192:	92 bb       	out	0x12, r25	; 18
 194:	c1 9a       	sbi	0x18, 1	; 24
 196:	c1 98       	cbi	0x18, 1	; 24
 198:	25 bb       	out	0x15, r18	; 21
 19a:	82 b3       	in	r24, 0x12	; 18
 19c:	8f 79       	andi	r24, 0x9F	; 159
 19e:	82 bb       	out	0x12, r24	; 18
 1a0:	0f 90       	pop	r0
 1a2:	0f 90       	pop	r0
 1a4:	df 91       	pop	r29
 1a6:	cf 91       	pop	r28
 1a8:	08 95       	ret

000001aa <writeByte>:
 1aa:	cf 93       	push	r28
 1ac:	df 93       	push	r29
 1ae:	1f 92       	push	r1
 1b0:	cd b7       	in	r28, 0x3d	; 61
 1b2:	de b7       	in	r29, 0x3e	; 62
 1b4:	89 83       	std	Y+1, r24	; 0x01
 1b6:	ba df       	rcall	.-140    	; 0x12c <dataPortOutput>
 1b8:	20 ec       	ldi	r18, 0xC0	; 192
 1ba:	25 bb       	out	0x15, r18	; 21
 1bc:	92 b3       	in	r25, 0x12	; 18
 1be:	9f 79       	andi	r25, 0x9F	; 159
 1c0:	92 bb       	out	0x12, r25	; 18
 1c2:	35 b3       	in	r19, 0x15	; 21
 1c4:	89 81       	ldd	r24, Y+1	; 0x01
 1c6:	98 2f       	mov	r25, r24
 1c8:	9f 73       	andi	r25, 0x3F	; 63
 1ca:	93 2b       	or	r25, r19
 1cc:	95 bb       	out	0x15, r25	; 21
 1ce:	92 b3       	in	r25, 0x12	; 18
 1d0:	80 7c       	andi	r24, 0xC0	; 192
 1d2:	86 95       	lsr	r24
 1d4:	89 2b       	or	r24, r25
 1d6:	82 bb       	out	0x12, r24	; 18
 1d8:	92 98       	cbi	0x12, 2	; 18
 1da:	92 9a       	sbi	0x12, 2	; 18
 1dc:	25 bb       	out	0x15, r18	; 21
 1de:	82 b3       	in	r24, 0x12	; 18
 1e0:	8f 79       	andi	r24, 0x9F	; 159
 1e2:	82 bb       	out	0x12, r24	; 18
 1e4:	0f 90       	pop	r0
 1e6:	df 91       	pop	r29
 1e8:	cf 91       	pop	r28
 1ea:	08 95       	ret

000001ec <readByte>:
 1ec:	a5 df       	rcall	.-182    	; 0x138 <dataPortInput>
 1ee:	93 98       	cbi	0x12, 3	; 18
 1f0:	85 e0       	ldi	r24, 0x05	; 5
 1f2:	8a 95       	dec	r24
 1f4:	f1 f7       	brne	.-4      	; 0x1f2 <readByte+0x6>
 1f6:	00 00       	nop
 1f8:	93 b3       	in	r25, 0x13	; 19
 1fa:	80 b3       	in	r24, 0x10	; 16
 1fc:	80 76       	andi	r24, 0x60	; 96
 1fe:	88 0f       	add	r24, r24
 200:	93 9a       	sbi	0x12, 3	; 18
 202:	89 2b       	or	r24, r25
 204:	08 95       	ret

00000206 <initSPI>:
 206:	87 b3       	in	r24, 0x17	; 23
 208:	8c 62       	ori	r24, 0x2C	; 44
 20a:	87 bb       	out	0x17, r24	; 23
 20c:	8d b1       	in	r24, 0x0d	; 13
 20e:	81 65       	ori	r24, 0x51	; 81
 210:	8d b9       	out	0x0d, r24	; 13
 212:	08 95       	ret

00000214 <sendSPI>:
 214:	8f b9       	out	0x0f, r24	; 15
 216:	77 9b       	sbis	0x0e, 7	; 14
 218:	fe cf       	rjmp	.-4      	; 0x216 <sendSPI+0x2>
 21a:	8f b1       	in	r24, 0x0f	; 15
 21c:	08 95       	ret

0000021e <startSampling>:
 21e:	ef 92       	push	r14
 220:	ff 92       	push	r15
 222:	0f 93       	push	r16
 224:	1f 93       	push	r17
 226:	cf 93       	push	r28
 228:	df 93       	push	r29
 22a:	00 d0       	rcall	.+0      	; 0x22c <startSampling+0xe>
 22c:	cd b7       	in	r28, 0x3d	; 61
 22e:	de b7       	in	r29, 0x3e	; 62
 230:	be 01       	movw	r22, r28
 232:	6f 5f       	subi	r22, 0xFF	; 255
 234:	7f 4f       	sbci	r23, 0xFF	; 255
 236:	ce 01       	movw	r24, r28
 238:	02 96       	adiw	r24, 0x02	; 2
 23a:	5d d0       	rcall	.+186    	; 0x2f6 <makeSampleChannelA>
 23c:	80 91 62 00 	lds	r24, 0x0062
 240:	90 91 63 00 	lds	r25, 0x0063
 244:	7f df       	rcall	.-258    	; 0x144 <setAddress>
 246:	8a 81       	ldd	r24, Y+2	; 0x02
 248:	b0 df       	rcall	.-160    	; 0x1aa <writeByte>
 24a:	80 91 62 00 	lds	r24, 0x0062
 24e:	90 91 63 00 	lds	r25, 0x0063
 252:	01 96       	adiw	r24, 0x01	; 1
 254:	90 93 63 00 	sts	0x0063, r25
 258:	80 93 62 00 	sts	0x0062, r24
 25c:	73 df       	rcall	.-282    	; 0x144 <setAddress>
 25e:	89 81       	ldd	r24, Y+1	; 0x01
 260:	a4 df       	rcall	.-184    	; 0x1aa <writeByte>
 262:	80 91 62 00 	lds	r24, 0x0062
 266:	90 91 63 00 	lds	r25, 0x0063
 26a:	01 96       	adiw	r24, 0x01	; 1
 26c:	90 93 63 00 	sts	0x0063, r25
 270:	80 93 62 00 	sts	0x0062, r24
 274:	80 91 60 00 	lds	r24, 0x0060
 278:	90 91 61 00 	lds	r25, 0x0061
 27c:	01 96       	adiw	r24, 0x01	; 1
 27e:	90 93 61 00 	sts	0x0061, r25
 282:	80 93 60 00 	sts	0x0060, r24
 286:	89 3b       	cpi	r24, 0xB9	; 185
 288:	9b 40       	sbci	r25, 0x0B	; 11
 28a:	48 f1       	brcs	.+82     	; 0x2de <startSampling+0xc0>
 28c:	1a df       	rcall	.-460    	; 0xc2 <stopTimer2>
 28e:	80 e4       	ldi	r24, 0x40	; 64
 290:	e2 de       	rcall	.-572    	; 0x56 <sendUSART>
 292:	00 e0       	ldi	r16, 0x00	; 0
 294:	10 e0       	ldi	r17, 0x00	; 0
 296:	80 91 62 00 	lds	r24, 0x0062
 29a:	90 91 63 00 	lds	r25, 0x0063
 29e:	08 17       	cp	r16, r24
 2a0:	19 07       	cpc	r17, r25
 2a2:	e0 f4       	brcc	.+56     	; 0x2dc <startSampling+0xbe>
 2a4:	c8 01       	movw	r24, r16
 2a6:	4e df       	rcall	.-356    	; 0x144 <setAddress>
 2a8:	a1 df       	rcall	.-190    	; 0x1ec <readByte>
 2aa:	e8 2e       	mov	r14, r24
 2ac:	f1 2c       	mov	r15, r1
 2ae:	fe 2c       	mov	r15, r14
 2b0:	ee 24       	eor	r14, r14
 2b2:	c8 01       	movw	r24, r16
 2b4:	01 96       	adiw	r24, 0x01	; 1
 2b6:	46 df       	rcall	.-372    	; 0x144 <setAddress>
 2b8:	99 df       	rcall	.-206    	; 0x1ec <readByte>
 2ba:	6a e0       	ldi	r22, 0x0A	; 10
 2bc:	70 e0       	ldi	r23, 0x00	; 0
 2be:	97 01       	movw	r18, r14
 2c0:	28 2b       	or	r18, r24
 2c2:	c9 01       	movw	r24, r18
 2c4:	d7 de       	rcall	.-594    	; 0x74 <uart_putint>
 2c6:	8d e2       	ldi	r24, 0x2D	; 45
 2c8:	c6 de       	rcall	.-628    	; 0x56 <sendUSART>
 2ca:	8f e3       	ldi	r24, 0x3F	; 63
 2cc:	9f e1       	ldi	r25, 0x1F	; 31
 2ce:	01 97       	sbiw	r24, 0x01	; 1
 2d0:	f1 f7       	brne	.-4      	; 0x2ce <startSampling+0xb0>
 2d2:	00 c0       	rjmp	.+0      	; 0x2d4 <startSampling+0xb6>
 2d4:	00 00       	nop
 2d6:	0e 5f       	subi	r16, 0xFE	; 254
 2d8:	1f 4f       	sbci	r17, 0xFF	; 255
 2da:	dd cf       	rjmp	.-70     	; 0x296 <startSampling+0x78>
 2dc:	ff cf       	rjmp	.-2      	; 0x2dc <startSampling+0xbe>
 2de:	0f 90       	pop	r0
 2e0:	0f 90       	pop	r0
 2e2:	df 91       	pop	r29
 2e4:	cf 91       	pop	r28
 2e6:	1f 91       	pop	r17
 2e8:	0f 91       	pop	r16
 2ea:	ff 90       	pop	r15
 2ec:	ef 90       	pop	r14
 2ee:	08 95       	ret

000002f0 <initADC>:
 2f0:	ba 9a       	sbi	0x17, 2	; 23
 2f2:	c2 9a       	sbi	0x18, 2	; 24
 2f4:	08 95       	ret

000002f6 <makeSampleChannelA>:
 2f6:	0f 93       	push	r16
 2f8:	1f 93       	push	r17
 2fa:	cf 93       	push	r28
 2fc:	df 93       	push	r29
 2fe:	ec 01       	movw	r28, r24
 300:	8b 01       	movw	r16, r22
 302:	c2 98       	cbi	0x18, 2	; 24
 304:	8c e0       	ldi	r24, 0x0C	; 12
 306:	86 df       	rcall	.-244    	; 0x214 <sendSPI>
 308:	80 e0       	ldi	r24, 0x00	; 0
 30a:	84 df       	rcall	.-248    	; 0x214 <sendSPI>
 30c:	8f 70       	andi	r24, 0x0F	; 15
 30e:	88 83       	st	Y, r24
 310:	80 e0       	ldi	r24, 0x00	; 0
 312:	80 df       	rcall	.-256    	; 0x214 <sendSPI>
 314:	f8 01       	movw	r30, r16
 316:	80 83       	st	Z, r24
 318:	c2 9a       	sbi	0x18, 2	; 24
 31a:	df 91       	pop	r29
 31c:	cf 91       	pop	r28
 31e:	1f 91       	pop	r17
 320:	0f 91       	pop	r16
 322:	08 95       	ret

00000324 <makeSampleChannelB>:
 324:	0f 93       	push	r16
 326:	1f 93       	push	r17
 328:	cf 93       	push	r28
 32a:	df 93       	push	r29
 32c:	ec 01       	movw	r28, r24
 32e:	8b 01       	movw	r16, r22
 330:	c2 98       	cbi	0x18, 2	; 24
 332:	8c e0       	ldi	r24, 0x0C	; 12
 334:	6f df       	rcall	.-290    	; 0x214 <sendSPI>
 336:	80 e8       	ldi	r24, 0x80	; 128
 338:	6d df       	rcall	.-294    	; 0x214 <sendSPI>
 33a:	8f 70       	andi	r24, 0x0F	; 15
 33c:	88 83       	st	Y, r24
 33e:	80 e0       	ldi	r24, 0x00	; 0
 340:	69 df       	rcall	.-302    	; 0x214 <sendSPI>
 342:	f8 01       	movw	r30, r16
 344:	80 83       	st	Z, r24
 346:	c2 9a       	sbi	0x18, 2	; 24
 348:	df 91       	pop	r29
 34a:	cf 91       	pop	r28
 34c:	1f 91       	pop	r17
 34e:	0f 91       	pop	r16
 350:	08 95       	ret

00000352 <main>:
 352:	78 94       	sei
 354:	87 e6       	ldi	r24, 0x67	; 103
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	77 de       	rcall	.-786    	; 0x48 <initUSART>
 35a:	55 df       	rcall	.-342    	; 0x206 <initSPI>
 35c:	c9 df       	rcall	.-110    	; 0x2f0 <initADC>
 35e:	e0 de       	rcall	.-576    	; 0x120 <initLatch1>
 360:	e2 de       	rcall	.-572    	; 0x126 <initLatch2>
 362:	d6 de       	rcall	.-596    	; 0x110 <initSRAMControl>
 364:	2f ef       	ldi	r18, 0xFF	; 255
 366:	83 e2       	ldi	r24, 0x23	; 35
 368:	94 ef       	ldi	r25, 0xF4	; 244
 36a:	21 50       	subi	r18, 0x01	; 1
 36c:	80 40       	sbci	r24, 0x00	; 0
 36e:	90 40       	sbci	r25, 0x00	; 0
 370:	e1 f7       	brne	.-8      	; 0x36a <main+0x18>
 372:	00 c0       	rjmp	.+0      	; 0x374 <main+0x22>
 374:	00 00       	nop
 376:	99 de       	rcall	.-718    	; 0xaa <initTimer2>
 378:	ff cf       	rjmp	.-2      	; 0x378 <main+0x26>

0000037a <itoa>:
 37a:	45 32       	cpi	r20, 0x25	; 37
 37c:	51 05       	cpc	r21, r1
 37e:	18 f4       	brcc	.+6      	; 0x386 <itoa+0xc>
 380:	42 30       	cpi	r20, 0x02	; 2
 382:	08 f0       	brcs	.+2      	; 0x386 <itoa+0xc>
 384:	04 c0       	rjmp	.+8      	; 0x38e <__itoa_ncheck>
 386:	fb 01       	movw	r30, r22
 388:	10 82       	st	Z, r1
 38a:	cb 01       	movw	r24, r22
 38c:	08 95       	ret

0000038e <__itoa_ncheck>:
 38e:	bb 27       	eor	r27, r27
 390:	4a 30       	cpi	r20, 0x0A	; 10
 392:	31 f4       	brne	.+12     	; 0x3a0 <__itoa_ncheck+0x12>
 394:	99 23       	and	r25, r25
 396:	22 f4       	brpl	.+8      	; 0x3a0 <__itoa_ncheck+0x12>
 398:	bd e2       	ldi	r27, 0x2D	; 45
 39a:	90 95       	com	r25
 39c:	81 95       	neg	r24
 39e:	9f 4f       	sbci	r25, 0xFF	; 255
 3a0:	01 c0       	rjmp	.+2      	; 0x3a4 <__utoa_common>

000003a2 <__utoa_ncheck>:
 3a2:	bb 27       	eor	r27, r27

000003a4 <__utoa_common>:
 3a4:	fb 01       	movw	r30, r22
 3a6:	55 27       	eor	r21, r21
 3a8:	aa 27       	eor	r26, r26
 3aa:	88 0f       	add	r24, r24
 3ac:	99 1f       	adc	r25, r25
 3ae:	aa 1f       	adc	r26, r26
 3b0:	a4 17       	cp	r26, r20
 3b2:	10 f0       	brcs	.+4      	; 0x3b8 <__utoa_common+0x14>
 3b4:	a4 1b       	sub	r26, r20
 3b6:	83 95       	inc	r24
 3b8:	50 51       	subi	r21, 0x10	; 16
 3ba:	b9 f7       	brne	.-18     	; 0x3aa <__utoa_common+0x6>
 3bc:	a0 5d       	subi	r26, 0xD0	; 208
 3be:	aa 33       	cpi	r26, 0x3A	; 58
 3c0:	08 f0       	brcs	.+2      	; 0x3c4 <__utoa_common+0x20>
 3c2:	a9 5d       	subi	r26, 0xD9	; 217
 3c4:	a1 93       	st	Z+, r26
 3c6:	00 97       	sbiw	r24, 0x00	; 0
 3c8:	79 f7       	brne	.-34     	; 0x3a8 <__utoa_common+0x4>
 3ca:	b1 11       	cpse	r27, r1
 3cc:	b1 93       	st	Z+, r27
 3ce:	11 92       	st	Z+, r1
 3d0:	cb 01       	movw	r24, r22
 3d2:	00 c0       	rjmp	.+0      	; 0x3d4 <strrev>

000003d4 <strrev>:
 3d4:	dc 01       	movw	r26, r24
 3d6:	fc 01       	movw	r30, r24
 3d8:	67 2f       	mov	r22, r23
 3da:	71 91       	ld	r23, Z+
 3dc:	77 23       	and	r23, r23
 3de:	e1 f7       	brne	.-8      	; 0x3d8 <strrev+0x4>
 3e0:	32 97       	sbiw	r30, 0x02	; 2
 3e2:	04 c0       	rjmp	.+8      	; 0x3ec <strrev+0x18>
 3e4:	7c 91       	ld	r23, X
 3e6:	6d 93       	st	X+, r22
 3e8:	70 83       	st	Z, r23
 3ea:	62 91       	ld	r22, -Z
 3ec:	ae 17       	cp	r26, r30
 3ee:	bf 07       	cpc	r27, r31
 3f0:	c8 f3       	brcs	.-14     	; 0x3e4 <strrev+0x10>
 3f2:	08 95       	ret

000003f4 <_exit>:
 3f4:	f8 94       	cli

000003f6 <__stop_program>:
 3f6:	ff cf       	rjmp	.-2      	; 0x3f6 <__stop_program>
