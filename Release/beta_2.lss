
beta_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006da  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          0000002f  00800060  00800060  0000074e  2**0
                  ALLOC
  2 .comment      00000030  00000000  00000000  0000074e  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	21 c0       	rjmp	.+66     	; 0x46 <__bad_interrupt>
   4:	20 c0       	rjmp	.+64     	; 0x46 <__bad_interrupt>
   6:	2d c1       	rjmp	.+602    	; 0x262 <__vector_3>
   8:	1e c0       	rjmp	.+60     	; 0x46 <__bad_interrupt>
   a:	1d c0       	rjmp	.+58     	; 0x46 <__bad_interrupt>
   c:	1c c0       	rjmp	.+56     	; 0x46 <__bad_interrupt>
   e:	1b c0       	rjmp	.+54     	; 0x46 <__bad_interrupt>
  10:	1a c0       	rjmp	.+52     	; 0x46 <__bad_interrupt>
  12:	19 c0       	rjmp	.+50     	; 0x46 <__bad_interrupt>
  14:	18 c0       	rjmp	.+48     	; 0x46 <__bad_interrupt>
  16:	49 c0       	rjmp	.+146    	; 0xaa <__vector_11>
  18:	16 c0       	rjmp	.+44     	; 0x46 <__bad_interrupt>
  1a:	15 c0       	rjmp	.+42     	; 0x46 <__bad_interrupt>
  1c:	14 c0       	rjmp	.+40     	; 0x46 <__bad_interrupt>
  1e:	13 c0       	rjmp	.+38     	; 0x46 <__bad_interrupt>
  20:	12 c0       	rjmp	.+36     	; 0x46 <__bad_interrupt>
  22:	11 c0       	rjmp	.+34     	; 0x46 <__bad_interrupt>
  24:	10 c0       	rjmp	.+32     	; 0x46 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_clear_bss>:
  32:	20 e0       	ldi	r18, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	01 c0       	rjmp	.+2      	; 0x3c <.do_clear_bss_start>

0000003a <.do_clear_bss_loop>:
  3a:	1d 92       	st	X+, r1

0000003c <.do_clear_bss_start>:
  3c:	af 38       	cpi	r26, 0x8F	; 143
  3e:	b2 07       	cpc	r27, r18
  40:	e1 f7       	brne	.-8      	; 0x3a <.do_clear_bss_loop>
  42:	01 d3       	rcall	.+1538   	; 0x646 <main>
  44:	48 c3       	rjmp	.+1680   	; 0x6d6 <_exit>

00000046 <__bad_interrupt>:
  46:	dc cf       	rjmp	.-72     	; 0x0 <__vectors>

00000048 <initUSART>:
  48:	90 bd       	out	0x20, r25	; 32
  4a:	89 b9       	out	0x09, r24	; 9
  4c:	88 e9       	ldi	r24, 0x98	; 152
  4e:	8a b9       	out	0x0a, r24	; 10
  50:	86 e8       	ldi	r24, 0x86	; 134
  52:	80 bd       	out	0x20, r24	; 32
  54:	08 95       	ret

00000056 <sendUSART>:
  56:	5d 9b       	sbis	0x0b, 5	; 11
  58:	fe cf       	rjmp	.-4      	; 0x56 <sendUSART>
  5a:	8c b9       	out	0x0c, r24	; 12
  5c:	08 95       	ret

0000005e <uart_puts>:
  5e:	cf 93       	push	r28
  60:	df 93       	push	r29
  62:	ec 01       	movw	r28, r24
  64:	89 91       	ld	r24, Y+
  66:	88 23       	and	r24, r24
  68:	11 f0       	breq	.+4      	; 0x6e <uart_puts+0x10>
  6a:	f5 df       	rcall	.-22     	; 0x56 <sendUSART>
  6c:	fb cf       	rjmp	.-10     	; 0x64 <uart_puts+0x6>
  6e:	df 91       	pop	r29
  70:	cf 91       	pop	r28
  72:	08 95       	ret

00000074 <uart_putint>:
  74:	cf 93       	push	r28
  76:	df 93       	push	r29
  78:	cd b7       	in	r28, 0x3d	; 61
  7a:	de b7       	in	r29, 0x3e	; 62
  7c:	61 97       	sbiw	r28, 0x11	; 17
  7e:	0f b6       	in	r0, 0x3f	; 63
  80:	f8 94       	cli
  82:	de bf       	out	0x3e, r29	; 62
  84:	0f be       	out	0x3f, r0	; 63
  86:	cd bf       	out	0x3d, r28	; 61
  88:	ab 01       	movw	r20, r22
  8a:	be 01       	movw	r22, r28
  8c:	6f 5f       	subi	r22, 0xFF	; 255
  8e:	7f 4f       	sbci	r23, 0xFF	; 255
  90:	e5 d2       	rcall	.+1482   	; 0x65c <itoa>
  92:	ce 01       	movw	r24, r28
  94:	01 96       	adiw	r24, 0x01	; 1
  96:	e3 df       	rcall	.-58     	; 0x5e <uart_puts>
  98:	61 96       	adiw	r28, 0x11	; 17
  9a:	0f b6       	in	r0, 0x3f	; 63
  9c:	f8 94       	cli
  9e:	de bf       	out	0x3e, r29	; 62
  a0:	0f be       	out	0x3f, r0	; 63
  a2:	cd bf       	out	0x3d, r28	; 61
  a4:	df 91       	pop	r29
  a6:	cf 91       	pop	r28
  a8:	08 95       	ret

000000aa <__vector_11>:
  aa:	1f 92       	push	r1
  ac:	0f 92       	push	r0
  ae:	0f b6       	in	r0, 0x3f	; 63
  b0:	0f 92       	push	r0
  b2:	11 24       	eor	r1, r1
  b4:	2f 93       	push	r18
  b6:	3f 93       	push	r19
  b8:	4f 93       	push	r20
  ba:	5f 93       	push	r21
  bc:	6f 93       	push	r22
  be:	7f 93       	push	r23
  c0:	8f 93       	push	r24
  c2:	9f 93       	push	r25
  c4:	af 93       	push	r26
  c6:	bf 93       	push	r27
  c8:	ef 93       	push	r30
  ca:	ff 93       	push	r31
  cc:	8c b1       	in	r24, 0x0c	; 12
  ce:	81 32       	cpi	r24, 0x21	; 33
  d0:	59 f0       	breq	.+22     	; 0xe8 <__vector_11+0x3e>
  d2:	e0 91 62 00 	lds	r30, 0x0062
  d6:	91 e0       	ldi	r25, 0x01	; 1
  d8:	9e 0f       	add	r25, r30
  da:	90 93 62 00 	sts	0x0062, r25
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	e0 5a       	subi	r30, 0xA0	; 160
  e2:	ff 4f       	sbci	r31, 0xFF	; 255
  e4:	80 83       	st	Z, r24
  e6:	2e c0       	rjmp	.+92     	; 0x144 <__vector_11+0x9a>
  e8:	10 92 62 00 	sts	0x0062, r1
  ec:	80 91 60 00 	lds	r24, 0x0060
  f0:	86 34       	cpi	r24, 0x46	; 70
  f2:	89 f0       	breq	.+34     	; 0x116 <__vector_11+0x6c>
  f4:	18 f4       	brcc	.+6      	; 0xfc <__vector_11+0x52>
  f6:	83 34       	cpi	r24, 0x43	; 67
  f8:	31 f0       	breq	.+12     	; 0x106 <__vector_11+0x5c>
  fa:	24 c0       	rjmp	.+72     	; 0x144 <__vector_11+0x9a>
  fc:	83 35       	cpi	r24, 0x53	; 83
  fe:	d9 f0       	breq	.+54     	; 0x136 <__vector_11+0x8c>
 100:	84 35       	cpi	r24, 0x54	; 84
 102:	89 f0       	breq	.+34     	; 0x126 <__vector_11+0x7c>
 104:	1f c0       	rjmp	.+62     	; 0x144 <__vector_11+0x9a>
 106:	80 91 61 00 	lds	r24, 0x0061
 10a:	9f ec       	ldi	r25, 0xCF	; 207
 10c:	98 0f       	add	r25, r24
 10e:	93 30       	cpi	r25, 0x03	; 3
 110:	c8 f4       	brcc	.+50     	; 0x144 <__vector_11+0x9a>
 112:	bf d1       	rcall	.+894    	; 0x492 <setSamplingChannel>
 114:	17 c0       	rjmp	.+46     	; 0x144 <__vector_11+0x9a>
 116:	80 91 61 00 	lds	r24, 0x0061
 11a:	90 ed       	ldi	r25, 0xD0	; 208
 11c:	98 0f       	add	r25, r24
 11e:	9a 30       	cpi	r25, 0x0A	; 10
 120:	88 f4       	brcc	.+34     	; 0x144 <__vector_11+0x9a>
 122:	c5 d1       	rcall	.+906    	; 0x4ae <setSamplingFreq>
 124:	0f c0       	rjmp	.+30     	; 0x144 <__vector_11+0x9a>
 126:	80 91 61 00 	lds	r24, 0x0061
 12a:	90 ed       	ldi	r25, 0xD0	; 208
 12c:	98 0f       	add	r25, r24
 12e:	9a 30       	cpi	r25, 0x0A	; 10
 130:	48 f4       	brcc	.+18     	; 0x144 <__vector_11+0x9a>
 132:	f3 d1       	rcall	.+998    	; 0x51a <setSamplingTime>
 134:	07 c0       	rjmp	.+14     	; 0x144 <__vector_11+0x9a>
 136:	80 91 61 00 	lds	r24, 0x0061
 13a:	9f ec       	ldi	r25, 0xCF	; 207
 13c:	98 0f       	add	r25, r24
 13e:	92 30       	cpi	r25, 0x02	; 2
 140:	08 f4       	brcc	.+2      	; 0x144 <__vector_11+0x9a>
 142:	39 d2       	rcall	.+1138   	; 0x5b6 <setSamplingStart>
 144:	ff 91       	pop	r31
 146:	ef 91       	pop	r30
 148:	bf 91       	pop	r27
 14a:	af 91       	pop	r26
 14c:	9f 91       	pop	r25
 14e:	8f 91       	pop	r24
 150:	7f 91       	pop	r23
 152:	6f 91       	pop	r22
 154:	5f 91       	pop	r21
 156:	4f 91       	pop	r20
 158:	3f 91       	pop	r19
 15a:	2f 91       	pop	r18
 15c:	0f 90       	pop	r0
 15e:	0f be       	out	0x3f, r0	; 63
 160:	0f 90       	pop	r0
 162:	1f 90       	pop	r1
 164:	18 95       	reti

00000166 <setAndStartTimer>:
 166:	25 b5       	in	r18, 0x25	; 37
 168:	28 60       	ori	r18, 0x08	; 8
 16a:	25 bd       	out	0x25, r18	; 37
 16c:	51 e0       	ldi	r21, 0x01	; 1
 16e:	80 34       	cpi	r24, 0x40	; 64
 170:	2f e1       	ldi	r18, 0x1F	; 31
 172:	92 07       	cpc	r25, r18
 174:	09 f0       	breq	.+2      	; 0x178 <setAndStartTimer+0x12>
 176:	50 e0       	ldi	r21, 0x00	; 0
 178:	41 e0       	ldi	r20, 0x01	; 1
 17a:	80 31       	cpi	r24, 0x10	; 16
 17c:	37 e2       	ldi	r19, 0x27	; 39
 17e:	93 07       	cpc	r25, r19
 180:	09 f0       	breq	.+2      	; 0x184 <setAndStartTimer+0x1e>
 182:	40 e0       	ldi	r20, 0x00	; 0
 184:	24 2f       	mov	r18, r20
 186:	25 2b       	or	r18, r21
 188:	31 f4       	brne	.+12     	; 0x196 <setAndStartTimer+0x30>
 18a:	9c 01       	movw	r18, r24
 18c:	28 5e       	subi	r18, 0xE8	; 232
 18e:	33 40       	sbci	r19, 0x03	; 3
 190:	21 3a       	cpi	r18, 0xA1	; 161
 192:	3f 40       	sbci	r19, 0x0F	; 15
 194:	30 f4       	brcc	.+12     	; 0x1a2 <setAndStartTimer+0x3c>
 196:	25 b5       	in	r18, 0x25	; 37
 198:	2c 7f       	andi	r18, 0xFC	; 252
 19a:	25 bd       	out	0x25, r18	; 37
 19c:	25 b5       	in	r18, 0x25	; 37
 19e:	24 60       	ori	r18, 0x04	; 4
 1a0:	25 bd       	out	0x25, r18	; 37
 1a2:	21 e0       	ldi	r18, 0x01	; 1
 1a4:	80 37       	cpi	r24, 0x70	; 112
 1a6:	37 e1       	ldi	r19, 0x17	; 23
 1a8:	93 07       	cpc	r25, r19
 1aa:	09 f0       	breq	.+2      	; 0x1ae <setAndStartTimer+0x48>
 1ac:	20 e0       	ldi	r18, 0x00	; 0
 1ae:	61 e0       	ldi	r22, 0x01	; 1
 1b0:	88 35       	cpi	r24, 0x58	; 88
 1b2:	3b e1       	ldi	r19, 0x1B	; 27
 1b4:	93 07       	cpc	r25, r19
 1b6:	19 f0       	breq	.+6      	; 0x1be <setAndStartTimer+0x58>
 1b8:	60 e0       	ldi	r22, 0x00	; 0
 1ba:	22 23       	and	r18, r18
 1bc:	31 f0       	breq	.+12     	; 0x1ca <setAndStartTimer+0x64>
 1be:	35 b5       	in	r19, 0x25	; 37
 1c0:	3b 7f       	andi	r19, 0xFB	; 251
 1c2:	35 bd       	out	0x25, r19	; 37
 1c4:	35 b5       	in	r19, 0x25	; 37
 1c6:	33 60       	ori	r19, 0x03	; 3
 1c8:	35 bd       	out	0x25, r19	; 37
 1ca:	88 32       	cpi	r24, 0x28	; 40
 1cc:	33 e2       	ldi	r19, 0x23	; 35
 1ce:	93 07       	cpc	r25, r19
 1d0:	39 f4       	brne	.+14     	; 0x1e0 <setAndStartTimer+0x7a>
 1d2:	35 b5       	in	r19, 0x25	; 37
 1d4:	3a 7f       	andi	r19, 0xFA	; 250
 1d6:	35 bd       	out	0x25, r19	; 37
 1d8:	35 b5       	in	r19, 0x25	; 37
 1da:	32 60       	ori	r19, 0x02	; 2
 1dc:	35 bd       	out	0x25, r19	; 37
 1de:	1b c0       	rjmp	.+54     	; 0x216 <setAndStartTimer+0xb0>
 1e0:	88 3e       	cpi	r24, 0xE8	; 232
 1e2:	33 e0       	ldi	r19, 0x03	; 3
 1e4:	93 07       	cpc	r25, r19
 1e6:	19 f4       	brne	.+6      	; 0x1ee <setAndStartTimer+0x88>
 1e8:	39 ef       	ldi	r19, 0xF9	; 249
 1ea:	33 bd       	out	0x23, r19	; 35
 1ec:	14 c0       	rjmp	.+40     	; 0x216 <setAndStartTimer+0xb0>
 1ee:	80 3d       	cpi	r24, 0xD0	; 208
 1f0:	37 e0       	ldi	r19, 0x07	; 7
 1f2:	93 07       	cpc	r25, r19
 1f4:	11 f4       	brne	.+4      	; 0x1fa <setAndStartTimer+0x94>
 1f6:	3c e7       	ldi	r19, 0x7C	; 124
 1f8:	05 c0       	rjmp	.+10     	; 0x204 <setAndStartTimer+0x9e>
 1fa:	88 3b       	cpi	r24, 0xB8	; 184
 1fc:	3b e0       	ldi	r19, 0x0B	; 11
 1fe:	93 07       	cpc	r25, r19
 200:	19 f4       	brne	.+6      	; 0x208 <setAndStartTimer+0xa2>
 202:	32 e5       	ldi	r19, 0x52	; 82
 204:	33 bd       	out	0x23, r19	; 35
 206:	0d c0       	rjmp	.+26     	; 0x222 <setAndStartTimer+0xbc>
 208:	80 3a       	cpi	r24, 0xA0	; 160
 20a:	3f e0       	ldi	r19, 0x0F	; 15
 20c:	93 07       	cpc	r25, r19
 20e:	19 f4       	brne	.+6      	; 0x216 <setAndStartTimer+0xb0>
 210:	2d e3       	ldi	r18, 0x3D	; 61
 212:	23 bd       	out	0x23, r18	; 35
 214:	0b c0       	rjmp	.+22     	; 0x22c <setAndStartTimer+0xc6>
 216:	88 38       	cpi	r24, 0x88	; 136
 218:	33 e1       	ldi	r19, 0x13	; 19
 21a:	93 07       	cpc	r25, r19
 21c:	11 f4       	brne	.+4      	; 0x222 <setAndStartTimer+0xbc>
 21e:	21 e3       	ldi	r18, 0x31	; 49
 220:	03 c0       	rjmp	.+6      	; 0x228 <setAndStartTimer+0xc2>
 222:	22 23       	and	r18, r18
 224:	19 f0       	breq	.+6      	; 0x22c <setAndStartTimer+0xc6>
 226:	22 e5       	ldi	r18, 0x52	; 82
 228:	23 bd       	out	0x23, r18	; 35
 22a:	05 c0       	rjmp	.+10     	; 0x236 <setAndStartTimer+0xd0>
 22c:	66 23       	and	r22, r22
 22e:	19 f0       	breq	.+6      	; 0x236 <setAndStartTimer+0xd0>
 230:	20 e2       	ldi	r18, 0x20	; 32
 232:	23 bd       	out	0x23, r18	; 35
 234:	05 c0       	rjmp	.+10     	; 0x240 <setAndStartTimer+0xda>
 236:	55 23       	and	r21, r21
 238:	19 f0       	breq	.+6      	; 0x240 <setAndStartTimer+0xda>
 23a:	8e e1       	ldi	r24, 0x1E	; 30
 23c:	83 bd       	out	0x23, r24	; 35
 23e:	05 c0       	rjmp	.+10     	; 0x24a <setAndStartTimer+0xe4>
 240:	88 32       	cpi	r24, 0x28	; 40
 242:	93 42       	sbci	r25, 0x23	; 35
 244:	11 f4       	brne	.+4      	; 0x24a <setAndStartTimer+0xe4>
 246:	8d ed       	ldi	r24, 0xDD	; 221
 248:	03 c0       	rjmp	.+6      	; 0x250 <setAndStartTimer+0xea>
 24a:	44 23       	and	r20, r20
 24c:	11 f0       	breq	.+4      	; 0x252 <setAndStartTimer+0xec>
 24e:	88 e1       	ldi	r24, 0x18	; 24
 250:	83 bd       	out	0x23, r24	; 35
 252:	89 b7       	in	r24, 0x39	; 57
 254:	80 68       	ori	r24, 0x80	; 128
 256:	89 bf       	out	0x39, r24	; 57
 258:	08 95       	ret

0000025a <stopTimer>:
 25a:	85 b5       	in	r24, 0x25	; 37
 25c:	88 7f       	andi	r24, 0xF8	; 248
 25e:	85 bd       	out	0x25, r24	; 37
 260:	08 95       	ret

00000262 <__vector_3>:
 262:	1f 92       	push	r1
 264:	0f 92       	push	r0
 266:	0f b6       	in	r0, 0x3f	; 63
 268:	0f 92       	push	r0
 26a:	11 24       	eor	r1, r1
 26c:	2f 93       	push	r18
 26e:	3f 93       	push	r19
 270:	4f 93       	push	r20
 272:	5f 93       	push	r21
 274:	6f 93       	push	r22
 276:	7f 93       	push	r23
 278:	8f 93       	push	r24
 27a:	9f 93       	push	r25
 27c:	af 93       	push	r26
 27e:	bf 93       	push	r27
 280:	ef 93       	push	r30
 282:	ff 93       	push	r31
 284:	98 d0       	rcall	.+304    	; 0x3b6 <startSampling>
 286:	ff 91       	pop	r31
 288:	ef 91       	pop	r30
 28a:	bf 91       	pop	r27
 28c:	af 91       	pop	r26
 28e:	9f 91       	pop	r25
 290:	8f 91       	pop	r24
 292:	7f 91       	pop	r23
 294:	6f 91       	pop	r22
 296:	5f 91       	pop	r21
 298:	4f 91       	pop	r20
 29a:	3f 91       	pop	r19
 29c:	2f 91       	pop	r18
 29e:	0f 90       	pop	r0
 2a0:	0f be       	out	0x3f, r0	; 63
 2a2:	0f 90       	pop	r0
 2a4:	1f 90       	pop	r1
 2a6:	18 95       	reti

000002a8 <initSRAMControl>:
 2a8:	81 b3       	in	r24, 0x11	; 17
 2aa:	8c 61       	ori	r24, 0x1C	; 28
 2ac:	81 bb       	out	0x11, r24	; 17
 2ae:	82 b3       	in	r24, 0x12	; 18
 2b0:	8c 60       	ori	r24, 0x0C	; 12
 2b2:	82 bb       	out	0x12, r24	; 18
 2b4:	94 98       	cbi	0x12, 4	; 18
 2b6:	08 95       	ret

000002b8 <initLatch1>:
 2b8:	b8 9a       	sbi	0x17, 0	; 23
 2ba:	c0 98       	cbi	0x18, 0	; 24
 2bc:	08 95       	ret

000002be <initLatch2>:
 2be:	b9 9a       	sbi	0x17, 1	; 23
 2c0:	c1 98       	cbi	0x18, 1	; 24
 2c2:	08 95       	ret

000002c4 <dataPortOutput>:
 2c4:	8f ef       	ldi	r24, 0xFF	; 255
 2c6:	84 bb       	out	0x14, r24	; 20
 2c8:	81 b3       	in	r24, 0x11	; 17
 2ca:	80 66       	ori	r24, 0x60	; 96
 2cc:	81 bb       	out	0x11, r24	; 17
 2ce:	08 95       	ret

000002d0 <dataPortInput>:
 2d0:	80 ec       	ldi	r24, 0xC0	; 192
 2d2:	84 bb       	out	0x14, r24	; 20
 2d4:	81 b3       	in	r24, 0x11	; 17
 2d6:	8f 79       	andi	r24, 0x9F	; 159
 2d8:	81 bb       	out	0x11, r24	; 17
 2da:	08 95       	ret

000002dc <setAddress>:
 2dc:	cf 93       	push	r28
 2de:	df 93       	push	r29
 2e0:	00 d0       	rcall	.+0      	; 0x2e2 <setAddress+0x6>
 2e2:	cd b7       	in	r28, 0x3d	; 61
 2e4:	de b7       	in	r29, 0x3e	; 62
 2e6:	89 83       	std	Y+1, r24	; 0x01
 2e8:	9a 83       	std	Y+2, r25	; 0x02
 2ea:	ec df       	rcall	.-40     	; 0x2c4 <dataPortOutput>
 2ec:	20 ec       	ldi	r18, 0xC0	; 192
 2ee:	25 bb       	out	0x15, r18	; 21
 2f0:	32 b3       	in	r19, 0x12	; 18
 2f2:	3f 79       	andi	r19, 0x9F	; 159
 2f4:	32 bb       	out	0x12, r19	; 18
 2f6:	45 b3       	in	r20, 0x15	; 21
 2f8:	89 81       	ldd	r24, Y+1	; 0x01
 2fa:	38 2f       	mov	r19, r24
 2fc:	3f 73       	andi	r19, 0x3F	; 63
 2fe:	34 2b       	or	r19, r20
 300:	35 bb       	out	0x15, r19	; 21
 302:	32 b3       	in	r19, 0x12	; 18
 304:	80 7c       	andi	r24, 0xC0	; 192
 306:	86 95       	lsr	r24
 308:	83 2b       	or	r24, r19
 30a:	82 bb       	out	0x12, r24	; 18
 30c:	c0 9a       	sbi	0x18, 0	; 24
 30e:	c0 98       	cbi	0x18, 0	; 24
 310:	25 bb       	out	0x15, r18	; 21
 312:	82 b3       	in	r24, 0x12	; 18
 314:	8f 79       	andi	r24, 0x9F	; 159
 316:	82 bb       	out	0x12, r24	; 18
 318:	35 b3       	in	r19, 0x15	; 21
 31a:	9a 81       	ldd	r25, Y+2	; 0x02
 31c:	89 2f       	mov	r24, r25
 31e:	8f 73       	andi	r24, 0x3F	; 63
 320:	83 2b       	or	r24, r19
 322:	85 bb       	out	0x15, r24	; 21
 324:	82 b3       	in	r24, 0x12	; 18
 326:	96 95       	lsr	r25
 328:	98 2b       	or	r25, r24
 32a:	92 bb       	out	0x12, r25	; 18
 32c:	c1 9a       	sbi	0x18, 1	; 24
 32e:	c1 98       	cbi	0x18, 1	; 24
 330:	25 bb       	out	0x15, r18	; 21
 332:	82 b3       	in	r24, 0x12	; 18
 334:	8f 79       	andi	r24, 0x9F	; 159
 336:	82 bb       	out	0x12, r24	; 18
 338:	0f 90       	pop	r0
 33a:	0f 90       	pop	r0
 33c:	df 91       	pop	r29
 33e:	cf 91       	pop	r28
 340:	08 95       	ret

00000342 <writeByte>:
 342:	cf 93       	push	r28
 344:	df 93       	push	r29
 346:	1f 92       	push	r1
 348:	cd b7       	in	r28, 0x3d	; 61
 34a:	de b7       	in	r29, 0x3e	; 62
 34c:	89 83       	std	Y+1, r24	; 0x01
 34e:	ba df       	rcall	.-140    	; 0x2c4 <dataPortOutput>
 350:	20 ec       	ldi	r18, 0xC0	; 192
 352:	25 bb       	out	0x15, r18	; 21
 354:	92 b3       	in	r25, 0x12	; 18
 356:	9f 79       	andi	r25, 0x9F	; 159
 358:	92 bb       	out	0x12, r25	; 18
 35a:	35 b3       	in	r19, 0x15	; 21
 35c:	89 81       	ldd	r24, Y+1	; 0x01
 35e:	98 2f       	mov	r25, r24
 360:	9f 73       	andi	r25, 0x3F	; 63
 362:	93 2b       	or	r25, r19
 364:	95 bb       	out	0x15, r25	; 21
 366:	92 b3       	in	r25, 0x12	; 18
 368:	80 7c       	andi	r24, 0xC0	; 192
 36a:	86 95       	lsr	r24
 36c:	89 2b       	or	r24, r25
 36e:	82 bb       	out	0x12, r24	; 18
 370:	92 98       	cbi	0x12, 2	; 18
 372:	92 9a       	sbi	0x12, 2	; 18
 374:	25 bb       	out	0x15, r18	; 21
 376:	82 b3       	in	r24, 0x12	; 18
 378:	8f 79       	andi	r24, 0x9F	; 159
 37a:	82 bb       	out	0x12, r24	; 18
 37c:	0f 90       	pop	r0
 37e:	df 91       	pop	r29
 380:	cf 91       	pop	r28
 382:	08 95       	ret

00000384 <readByte>:
 384:	a5 df       	rcall	.-182    	; 0x2d0 <dataPortInput>
 386:	93 98       	cbi	0x12, 3	; 18
 388:	85 e0       	ldi	r24, 0x05	; 5
 38a:	8a 95       	dec	r24
 38c:	f1 f7       	brne	.-4      	; 0x38a <readByte+0x6>
 38e:	00 00       	nop
 390:	93 b3       	in	r25, 0x13	; 19
 392:	80 b3       	in	r24, 0x10	; 16
 394:	80 76       	andi	r24, 0x60	; 96
 396:	88 0f       	add	r24, r24
 398:	93 9a       	sbi	0x12, 3	; 18
 39a:	89 2b       	or	r24, r25
 39c:	08 95       	ret

0000039e <initSPI>:
 39e:	87 b3       	in	r24, 0x17	; 23
 3a0:	8c 62       	ori	r24, 0x2C	; 44
 3a2:	87 bb       	out	0x17, r24	; 23
 3a4:	8d b1       	in	r24, 0x0d	; 13
 3a6:	81 65       	ori	r24, 0x51	; 81
 3a8:	8d b9       	out	0x0d, r24	; 13
 3aa:	08 95       	ret

000003ac <sendSPI>:
 3ac:	8f b9       	out	0x0f, r24	; 15
 3ae:	77 9b       	sbis	0x0e, 7	; 14
 3b0:	fe cf       	rjmp	.-4      	; 0x3ae <sendSPI+0x2>
 3b2:	8f b1       	in	r24, 0x0f	; 15
 3b4:	08 95       	ret

000003b6 <startSampling>:
 3b6:	ef 92       	push	r14
 3b8:	ff 92       	push	r15
 3ba:	0f 93       	push	r16
 3bc:	1f 93       	push	r17
 3be:	cf 93       	push	r28
 3c0:	df 93       	push	r29
 3c2:	00 d0       	rcall	.+0      	; 0x3c4 <startSampling+0xe>
 3c4:	cd b7       	in	r28, 0x3d	; 61
 3c6:	de b7       	in	r29, 0x3e	; 62
 3c8:	be 01       	movw	r22, r28
 3ca:	6f 5f       	subi	r22, 0xFF	; 255
 3cc:	7f 4f       	sbci	r23, 0xFF	; 255
 3ce:	ce 01       	movw	r24, r28
 3d0:	02 96       	adiw	r24, 0x02	; 2
 3d2:	0b d1       	rcall	.+534    	; 0x5ea <makeSampleChannelA>
 3d4:	80 91 65 00 	lds	r24, 0x0065
 3d8:	90 91 66 00 	lds	r25, 0x0066
 3dc:	7f df       	rcall	.-258    	; 0x2dc <setAddress>
 3de:	8a 81       	ldd	r24, Y+2	; 0x02
 3e0:	b0 df       	rcall	.-160    	; 0x342 <writeByte>
 3e2:	80 91 65 00 	lds	r24, 0x0065
 3e6:	90 91 66 00 	lds	r25, 0x0066
 3ea:	01 96       	adiw	r24, 0x01	; 1
 3ec:	90 93 66 00 	sts	0x0066, r25
 3f0:	80 93 65 00 	sts	0x0065, r24
 3f4:	73 df       	rcall	.-282    	; 0x2dc <setAddress>
 3f6:	89 81       	ldd	r24, Y+1	; 0x01
 3f8:	a4 df       	rcall	.-184    	; 0x342 <writeByte>
 3fa:	80 91 65 00 	lds	r24, 0x0065
 3fe:	90 91 66 00 	lds	r25, 0x0066
 402:	01 96       	adiw	r24, 0x01	; 1
 404:	90 93 66 00 	sts	0x0066, r25
 408:	80 93 65 00 	sts	0x0065, r24
 40c:	80 91 63 00 	lds	r24, 0x0063
 410:	90 91 64 00 	lds	r25, 0x0064
 414:	01 96       	adiw	r24, 0x01	; 1
 416:	90 93 64 00 	sts	0x0064, r25
 41a:	80 93 63 00 	sts	0x0063, r24
 41e:	20 91 67 00 	lds	r18, 0x0067
 422:	30 91 68 00 	lds	r19, 0x0068
 426:	28 17       	cp	r18, r24
 428:	39 07       	cpc	r19, r25
 42a:	50 f5       	brcc	.+84     	; 0x480 <__stack+0x21>
 42c:	16 df       	rcall	.-468    	; 0x25a <stopTimer>
 42e:	00 e0       	ldi	r16, 0x00	; 0
 430:	10 e0       	ldi	r17, 0x00	; 0
 432:	80 91 65 00 	lds	r24, 0x0065
 436:	90 91 66 00 	lds	r25, 0x0066
 43a:	08 17       	cp	r16, r24
 43c:	19 07       	cpc	r17, r25
 43e:	b0 f4       	brcc	.+44     	; 0x46c <__stack+0xd>
 440:	c8 01       	movw	r24, r16
 442:	4c df       	rcall	.-360    	; 0x2dc <setAddress>
 444:	9f df       	rcall	.-194    	; 0x384 <readByte>
 446:	e8 2e       	mov	r14, r24
 448:	f1 2c       	mov	r15, r1
 44a:	fe 2c       	mov	r15, r14
 44c:	ee 24       	eor	r14, r14
 44e:	c8 01       	movw	r24, r16
 450:	01 96       	adiw	r24, 0x01	; 1
 452:	44 df       	rcall	.-376    	; 0x2dc <setAddress>
 454:	97 df       	rcall	.-210    	; 0x384 <readByte>
 456:	6a e0       	ldi	r22, 0x0A	; 10
 458:	70 e0       	ldi	r23, 0x00	; 0
 45a:	97 01       	movw	r18, r14
 45c:	28 2b       	or	r18, r24
 45e:	c9 01       	movw	r24, r18
 460:	09 de       	rcall	.-1006   	; 0x74 <uart_putint>
 462:	8c e2       	ldi	r24, 0x2C	; 44
 464:	f8 dd       	rcall	.-1040   	; 0x56 <sendUSART>
 466:	0e 5f       	subi	r16, 0xFE	; 254
 468:	1f 4f       	sbci	r17, 0xFF	; 255
 46a:	e3 cf       	rjmp	.-58     	; 0x432 <startSampling+0x7c>
 46c:	81 e2       	ldi	r24, 0x21	; 33
 46e:	f3 dd       	rcall	.-1050   	; 0x56 <sendUSART>
 470:	10 92 66 00 	sts	0x0066, r1
 474:	10 92 65 00 	sts	0x0065, r1
 478:	10 92 64 00 	sts	0x0064, r1
 47c:	10 92 63 00 	sts	0x0063, r1
 480:	0f 90       	pop	r0
 482:	0f 90       	pop	r0
 484:	df 91       	pop	r29
 486:	cf 91       	pop	r28
 488:	1f 91       	pop	r17
 48a:	0f 91       	pop	r16
 48c:	ff 90       	pop	r15
 48e:	ef 90       	pop	r14
 490:	08 95       	ret

00000492 <setSamplingChannel>:
 492:	81 33       	cpi	r24, 0x31	; 49
 494:	11 f4       	brne	.+4      	; 0x49a <setSamplingChannel+0x8>
 496:	81 e0       	ldi	r24, 0x01	; 1
 498:	07 c0       	rjmp	.+14     	; 0x4a8 <setSamplingChannel+0x16>
 49a:	82 33       	cpi	r24, 0x32	; 50
 49c:	11 f4       	brne	.+4      	; 0x4a2 <setSamplingChannel+0x10>
 49e:	82 e0       	ldi	r24, 0x02	; 2
 4a0:	03 c0       	rjmp	.+6      	; 0x4a8 <setSamplingChannel+0x16>
 4a2:	83 33       	cpi	r24, 0x33	; 51
 4a4:	19 f4       	brne	.+6      	; 0x4ac <setSamplingChannel+0x1a>
 4a6:	83 e0       	ldi	r24, 0x03	; 3
 4a8:	80 93 8b 00 	sts	0x008B, r24
 4ac:	08 95       	ret

000004ae <setSamplingFreq>:
 4ae:	80 33       	cpi	r24, 0x30	; 48
 4b0:	19 f4       	brne	.+6      	; 0x4b8 <setSamplingFreq+0xa>
 4b2:	88 ee       	ldi	r24, 0xE8	; 232
 4b4:	93 e0       	ldi	r25, 0x03	; 3
 4b6:	2c c0       	rjmp	.+88     	; 0x510 <setSamplingFreq+0x62>
 4b8:	81 33       	cpi	r24, 0x31	; 49
 4ba:	19 f4       	brne	.+6      	; 0x4c2 <setSamplingFreq+0x14>
 4bc:	80 ed       	ldi	r24, 0xD0	; 208
 4be:	97 e0       	ldi	r25, 0x07	; 7
 4c0:	27 c0       	rjmp	.+78     	; 0x510 <setSamplingFreq+0x62>
 4c2:	82 33       	cpi	r24, 0x32	; 50
 4c4:	19 f4       	brne	.+6      	; 0x4cc <setSamplingFreq+0x1e>
 4c6:	88 eb       	ldi	r24, 0xB8	; 184
 4c8:	9b e0       	ldi	r25, 0x0B	; 11
 4ca:	22 c0       	rjmp	.+68     	; 0x510 <setSamplingFreq+0x62>
 4cc:	83 33       	cpi	r24, 0x33	; 51
 4ce:	19 f4       	brne	.+6      	; 0x4d6 <setSamplingFreq+0x28>
 4d0:	80 ea       	ldi	r24, 0xA0	; 160
 4d2:	9f e0       	ldi	r25, 0x0F	; 15
 4d4:	1d c0       	rjmp	.+58     	; 0x510 <setSamplingFreq+0x62>
 4d6:	84 33       	cpi	r24, 0x34	; 52
 4d8:	19 f4       	brne	.+6      	; 0x4e0 <setSamplingFreq+0x32>
 4da:	88 e8       	ldi	r24, 0x88	; 136
 4dc:	93 e1       	ldi	r25, 0x13	; 19
 4de:	18 c0       	rjmp	.+48     	; 0x510 <setSamplingFreq+0x62>
 4e0:	85 33       	cpi	r24, 0x35	; 53
 4e2:	19 f4       	brne	.+6      	; 0x4ea <setSamplingFreq+0x3c>
 4e4:	80 e7       	ldi	r24, 0x70	; 112
 4e6:	97 e1       	ldi	r25, 0x17	; 23
 4e8:	13 c0       	rjmp	.+38     	; 0x510 <setSamplingFreq+0x62>
 4ea:	86 33       	cpi	r24, 0x36	; 54
 4ec:	19 f4       	brne	.+6      	; 0x4f4 <setSamplingFreq+0x46>
 4ee:	88 e5       	ldi	r24, 0x58	; 88
 4f0:	9b e1       	ldi	r25, 0x1B	; 27
 4f2:	0e c0       	rjmp	.+28     	; 0x510 <setSamplingFreq+0x62>
 4f4:	87 33       	cpi	r24, 0x37	; 55
 4f6:	19 f4       	brne	.+6      	; 0x4fe <setSamplingFreq+0x50>
 4f8:	80 e4       	ldi	r24, 0x40	; 64
 4fa:	9f e1       	ldi	r25, 0x1F	; 31
 4fc:	09 c0       	rjmp	.+18     	; 0x510 <setSamplingFreq+0x62>
 4fe:	88 33       	cpi	r24, 0x38	; 56
 500:	19 f4       	brne	.+6      	; 0x508 <setSamplingFreq+0x5a>
 502:	88 e2       	ldi	r24, 0x28	; 40
 504:	93 e2       	ldi	r25, 0x23	; 35
 506:	04 c0       	rjmp	.+8      	; 0x510 <setSamplingFreq+0x62>
 508:	89 33       	cpi	r24, 0x39	; 57
 50a:	31 f4       	brne	.+12     	; 0x518 <setSamplingFreq+0x6a>
 50c:	80 e1       	ldi	r24, 0x10	; 16
 50e:	97 e2       	ldi	r25, 0x27	; 39
 510:	90 93 8e 00 	sts	0x008E, r25
 514:	80 93 8d 00 	sts	0x008D, r24
 518:	08 95       	ret

0000051a <setSamplingTime>:
 51a:	80 33       	cpi	r24, 0x30	; 48
 51c:	11 f4       	brne	.+4      	; 0x522 <setSamplingTime+0x8>
 51e:	81 e0       	ldi	r24, 0x01	; 1
 520:	23 c0       	rjmp	.+70     	; 0x568 <setSamplingTime+0x4e>
 522:	81 33       	cpi	r24, 0x31	; 49
 524:	11 f4       	brne	.+4      	; 0x52a <setSamplingTime+0x10>
 526:	82 e0       	ldi	r24, 0x02	; 2
 528:	1f c0       	rjmp	.+62     	; 0x568 <setSamplingTime+0x4e>
 52a:	82 33       	cpi	r24, 0x32	; 50
 52c:	11 f4       	brne	.+4      	; 0x532 <setSamplingTime+0x18>
 52e:	83 e0       	ldi	r24, 0x03	; 3
 530:	1b c0       	rjmp	.+54     	; 0x568 <setSamplingTime+0x4e>
 532:	83 33       	cpi	r24, 0x33	; 51
 534:	11 f4       	brne	.+4      	; 0x53a <setSamplingTime+0x20>
 536:	84 e0       	ldi	r24, 0x04	; 4
 538:	17 c0       	rjmp	.+46     	; 0x568 <setSamplingTime+0x4e>
 53a:	84 33       	cpi	r24, 0x34	; 52
 53c:	11 f4       	brne	.+4      	; 0x542 <setSamplingTime+0x28>
 53e:	85 e0       	ldi	r24, 0x05	; 5
 540:	13 c0       	rjmp	.+38     	; 0x568 <setSamplingTime+0x4e>
 542:	85 33       	cpi	r24, 0x35	; 53
 544:	11 f4       	brne	.+4      	; 0x54a <setSamplingTime+0x30>
 546:	86 e0       	ldi	r24, 0x06	; 6
 548:	0f c0       	rjmp	.+30     	; 0x568 <setSamplingTime+0x4e>
 54a:	86 33       	cpi	r24, 0x36	; 54
 54c:	11 f4       	brne	.+4      	; 0x552 <setSamplingTime+0x38>
 54e:	87 e0       	ldi	r24, 0x07	; 7
 550:	0b c0       	rjmp	.+22     	; 0x568 <setSamplingTime+0x4e>
 552:	87 33       	cpi	r24, 0x37	; 55
 554:	11 f4       	brne	.+4      	; 0x55a <setSamplingTime+0x40>
 556:	88 e0       	ldi	r24, 0x08	; 8
 558:	07 c0       	rjmp	.+14     	; 0x568 <setSamplingTime+0x4e>
 55a:	88 33       	cpi	r24, 0x38	; 56
 55c:	11 f4       	brne	.+4      	; 0x562 <setSamplingTime+0x48>
 55e:	89 e0       	ldi	r24, 0x09	; 9
 560:	03 c0       	rjmp	.+6      	; 0x568 <setSamplingTime+0x4e>
 562:	89 33       	cpi	r24, 0x39	; 57
 564:	19 f4       	brne	.+6      	; 0x56c <setSamplingTime+0x52>
 566:	8a e0       	ldi	r24, 0x0A	; 10
 568:	80 93 8c 00 	sts	0x008C, r24
 56c:	08 95       	ret

0000056e <setSamplingDefaultSettings>:
 56e:	21 e0       	ldi	r18, 0x01	; 1
 570:	20 93 8b 00 	sts	0x008B, r18
 574:	88 ee       	ldi	r24, 0xE8	; 232
 576:	93 e0       	ldi	r25, 0x03	; 3
 578:	90 93 8e 00 	sts	0x008E, r25
 57c:	80 93 8d 00 	sts	0x008D, r24
 580:	20 93 8c 00 	sts	0x008C, r18
 584:	08 95       	ret

00000586 <isSet>:
 586:	80 91 8b 00 	lds	r24, 0x008B
 58a:	88 23       	and	r24, r24
 58c:	59 f0       	breq	.+22     	; 0x5a4 <isSet+0x1e>
 58e:	80 91 8d 00 	lds	r24, 0x008D
 592:	90 91 8e 00 	lds	r25, 0x008E
 596:	89 2b       	or	r24, r25
 598:	29 f0       	breq	.+10     	; 0x5a4 <isSet+0x1e>
 59a:	81 e0       	ldi	r24, 0x01	; 1
 59c:	90 91 8c 00 	lds	r25, 0x008C
 5a0:	91 11       	cpse	r25, r1
 5a2:	01 c0       	rjmp	.+2      	; 0x5a6 <isSet+0x20>
 5a4:	80 e0       	ldi	r24, 0x00	; 0
 5a6:	08 95       	ret

000005a8 <isEnoughMemory>:
 5a8:	21 e0       	ldi	r18, 0x01	; 1
 5aa:	81 38       	cpi	r24, 0x81	; 129
 5ac:	9e 43       	sbci	r25, 0x3E	; 62
 5ae:	08 f0       	brcs	.+2      	; 0x5b2 <isEnoughMemory+0xa>
 5b0:	20 e0       	ldi	r18, 0x00	; 0
 5b2:	82 2f       	mov	r24, r18
 5b4:	08 95       	ret

000005b6 <setSamplingStart>:
 5b6:	e7 df       	rcall	.-50     	; 0x586 <isSet>
 5b8:	88 23       	and	r24, r24
 5ba:	99 f0       	breq	.+38     	; 0x5e2 <setSamplingStart+0x2c>
 5bc:	40 91 8c 00 	lds	r20, 0x008C
 5c0:	80 91 8d 00 	lds	r24, 0x008D
 5c4:	90 91 8e 00 	lds	r25, 0x008E
 5c8:	48 9f       	mul	r20, r24
 5ca:	90 01       	movw	r18, r0
 5cc:	49 9f       	mul	r20, r25
 5ce:	30 0d       	add	r19, r0
 5d0:	11 24       	eor	r1, r1
 5d2:	30 93 68 00 	sts	0x0068, r19
 5d6:	20 93 67 00 	sts	0x0067, r18
 5da:	21 38       	cpi	r18, 0x81	; 129
 5dc:	3e 43       	sbci	r19, 0x3E	; 62
 5de:	08 f4       	brcc	.+2      	; 0x5e2 <setSamplingStart+0x2c>
 5e0:	c2 cd       	rjmp	.-1148   	; 0x166 <setAndStartTimer>
 5e2:	08 95       	ret

000005e4 <initADC>:
 5e4:	ba 9a       	sbi	0x17, 2	; 23
 5e6:	c2 9a       	sbi	0x18, 2	; 24
 5e8:	08 95       	ret

000005ea <makeSampleChannelA>:
 5ea:	0f 93       	push	r16
 5ec:	1f 93       	push	r17
 5ee:	cf 93       	push	r28
 5f0:	df 93       	push	r29
 5f2:	ec 01       	movw	r28, r24
 5f4:	8b 01       	movw	r16, r22
 5f6:	c2 98       	cbi	0x18, 2	; 24
 5f8:	8c e0       	ldi	r24, 0x0C	; 12
 5fa:	d8 de       	rcall	.-592    	; 0x3ac <sendSPI>
 5fc:	80 e0       	ldi	r24, 0x00	; 0
 5fe:	d6 de       	rcall	.-596    	; 0x3ac <sendSPI>
 600:	8f 70       	andi	r24, 0x0F	; 15
 602:	88 83       	st	Y, r24
 604:	80 e0       	ldi	r24, 0x00	; 0
 606:	d2 de       	rcall	.-604    	; 0x3ac <sendSPI>
 608:	f8 01       	movw	r30, r16
 60a:	80 83       	st	Z, r24
 60c:	c2 9a       	sbi	0x18, 2	; 24
 60e:	df 91       	pop	r29
 610:	cf 91       	pop	r28
 612:	1f 91       	pop	r17
 614:	0f 91       	pop	r16
 616:	08 95       	ret

00000618 <makeSampleChannelB>:
 618:	0f 93       	push	r16
 61a:	1f 93       	push	r17
 61c:	cf 93       	push	r28
 61e:	df 93       	push	r29
 620:	ec 01       	movw	r28, r24
 622:	8b 01       	movw	r16, r22
 624:	c2 98       	cbi	0x18, 2	; 24
 626:	8c e0       	ldi	r24, 0x0C	; 12
 628:	c1 de       	rcall	.-638    	; 0x3ac <sendSPI>
 62a:	80 e8       	ldi	r24, 0x80	; 128
 62c:	bf de       	rcall	.-642    	; 0x3ac <sendSPI>
 62e:	8f 70       	andi	r24, 0x0F	; 15
 630:	88 83       	st	Y, r24
 632:	80 e0       	ldi	r24, 0x00	; 0
 634:	bb de       	rcall	.-650    	; 0x3ac <sendSPI>
 636:	f8 01       	movw	r30, r16
 638:	80 83       	st	Z, r24
 63a:	c2 9a       	sbi	0x18, 2	; 24
 63c:	df 91       	pop	r29
 63e:	cf 91       	pop	r28
 640:	1f 91       	pop	r17
 642:	0f 91       	pop	r16
 644:	08 95       	ret

00000646 <main>:
 646:	78 94       	sei
 648:	89 e1       	ldi	r24, 0x19	; 25
 64a:	90 e0       	ldi	r25, 0x00	; 0
 64c:	fd dc       	rcall	.-1542   	; 0x48 <initUSART>
 64e:	a7 de       	rcall	.-690    	; 0x39e <initSPI>
 650:	c9 df       	rcall	.-110    	; 0x5e4 <initADC>
 652:	32 de       	rcall	.-924    	; 0x2b8 <initLatch1>
 654:	34 de       	rcall	.-920    	; 0x2be <initLatch2>
 656:	28 de       	rcall	.-944    	; 0x2a8 <initSRAMControl>
 658:	8a df       	rcall	.-236    	; 0x56e <setSamplingDefaultSettings>
 65a:	ff cf       	rjmp	.-2      	; 0x65a <main+0x14>

0000065c <itoa>:
 65c:	45 32       	cpi	r20, 0x25	; 37
 65e:	51 05       	cpc	r21, r1
 660:	18 f4       	brcc	.+6      	; 0x668 <itoa+0xc>
 662:	42 30       	cpi	r20, 0x02	; 2
 664:	08 f0       	brcs	.+2      	; 0x668 <itoa+0xc>
 666:	04 c0       	rjmp	.+8      	; 0x670 <__itoa_ncheck>
 668:	fb 01       	movw	r30, r22
 66a:	10 82       	st	Z, r1
 66c:	cb 01       	movw	r24, r22
 66e:	08 95       	ret

00000670 <__itoa_ncheck>:
 670:	bb 27       	eor	r27, r27
 672:	4a 30       	cpi	r20, 0x0A	; 10
 674:	31 f4       	brne	.+12     	; 0x682 <__itoa_ncheck+0x12>
 676:	99 23       	and	r25, r25
 678:	22 f4       	brpl	.+8      	; 0x682 <__itoa_ncheck+0x12>
 67a:	bd e2       	ldi	r27, 0x2D	; 45
 67c:	90 95       	com	r25
 67e:	81 95       	neg	r24
 680:	9f 4f       	sbci	r25, 0xFF	; 255
 682:	01 c0       	rjmp	.+2      	; 0x686 <__utoa_common>

00000684 <__utoa_ncheck>:
 684:	bb 27       	eor	r27, r27

00000686 <__utoa_common>:
 686:	fb 01       	movw	r30, r22
 688:	55 27       	eor	r21, r21
 68a:	aa 27       	eor	r26, r26
 68c:	88 0f       	add	r24, r24
 68e:	99 1f       	adc	r25, r25
 690:	aa 1f       	adc	r26, r26
 692:	a4 17       	cp	r26, r20
 694:	10 f0       	brcs	.+4      	; 0x69a <__utoa_common+0x14>
 696:	a4 1b       	sub	r26, r20
 698:	83 95       	inc	r24
 69a:	50 51       	subi	r21, 0x10	; 16
 69c:	b9 f7       	brne	.-18     	; 0x68c <__utoa_common+0x6>
 69e:	a0 5d       	subi	r26, 0xD0	; 208
 6a0:	aa 33       	cpi	r26, 0x3A	; 58
 6a2:	08 f0       	brcs	.+2      	; 0x6a6 <__utoa_common+0x20>
 6a4:	a9 5d       	subi	r26, 0xD9	; 217
 6a6:	a1 93       	st	Z+, r26
 6a8:	00 97       	sbiw	r24, 0x00	; 0
 6aa:	79 f7       	brne	.-34     	; 0x68a <__utoa_common+0x4>
 6ac:	b1 11       	cpse	r27, r1
 6ae:	b1 93       	st	Z+, r27
 6b0:	11 92       	st	Z+, r1
 6b2:	cb 01       	movw	r24, r22
 6b4:	00 c0       	rjmp	.+0      	; 0x6b6 <strrev>

000006b6 <strrev>:
 6b6:	dc 01       	movw	r26, r24
 6b8:	fc 01       	movw	r30, r24
 6ba:	67 2f       	mov	r22, r23
 6bc:	71 91       	ld	r23, Z+
 6be:	77 23       	and	r23, r23
 6c0:	e1 f7       	brne	.-8      	; 0x6ba <strrev+0x4>
 6c2:	32 97       	sbiw	r30, 0x02	; 2
 6c4:	04 c0       	rjmp	.+8      	; 0x6ce <strrev+0x18>
 6c6:	7c 91       	ld	r23, X
 6c8:	6d 93       	st	X+, r22
 6ca:	70 83       	st	Z, r23
 6cc:	62 91       	ld	r22, -Z
 6ce:	ae 17       	cp	r26, r30
 6d0:	bf 07       	cpc	r27, r31
 6d2:	c8 f3       	brcs	.-14     	; 0x6c6 <strrev+0x10>
 6d4:	08 95       	ret

000006d6 <_exit>:
 6d6:	f8 94       	cli

000006d8 <__stop_program>:
 6d8:	ff cf       	rjmp	.-2      	; 0x6d8 <__stop_program>
