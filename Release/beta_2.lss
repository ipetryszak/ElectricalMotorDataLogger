
beta_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000674  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          0000002f  00800060  00800060  000006e8  2**0
                  ALLOC
  2 .comment      00000030  00000000  00000000  000006e8  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	21 c0       	rjmp	.+66     	; 0x46 <__bad_interrupt>
   4:	20 c0       	rjmp	.+64     	; 0x46 <__bad_interrupt>
   6:	08 c1       	rjmp	.+528    	; 0x218 <__vector_3>
   8:	1e c0       	rjmp	.+60     	; 0x46 <__bad_interrupt>
   a:	1d c0       	rjmp	.+58     	; 0x46 <__bad_interrupt>
   c:	1c c0       	rjmp	.+56     	; 0x46 <__bad_interrupt>
   e:	1b c0       	rjmp	.+54     	; 0x46 <__bad_interrupt>
  10:	1a c0       	rjmp	.+52     	; 0x46 <__bad_interrupt>
  12:	19 c0       	rjmp	.+50     	; 0x46 <__bad_interrupt>
  14:	18 c0       	rjmp	.+48     	; 0x46 <__bad_interrupt>
  16:	49 c0       	rjmp	.+146    	; 0xaa <__vector_11>
  18:	16 c0       	rjmp	.+44     	; 0x46 <__bad_interrupt>
  1a:	15 c0       	rjmp	.+42     	; 0x46 <__bad_interrupt>
  1c:	14 c0       	rjmp	.+40     	; 0x46 <__bad_interrupt>
  1e:	13 c0       	rjmp	.+38     	; 0x46 <__bad_interrupt>
  20:	12 c0       	rjmp	.+36     	; 0x46 <__bad_interrupt>
  22:	11 c0       	rjmp	.+34     	; 0x46 <__bad_interrupt>
  24:	10 c0       	rjmp	.+32     	; 0x46 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_clear_bss>:
  32:	20 e0       	ldi	r18, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	01 c0       	rjmp	.+2      	; 0x3c <.do_clear_bss_start>

0000003a <.do_clear_bss_loop>:
  3a:	1d 92       	st	X+, r1

0000003c <.do_clear_bss_start>:
  3c:	af 38       	cpi	r26, 0x8F	; 143
  3e:	b2 07       	cpc	r27, r18
  40:	e1 f7       	brne	.-8      	; 0x3a <.do_clear_bss_loop>
  42:	cf d2       	rcall	.+1438   	; 0x5e2 <main>
  44:	15 c3       	rjmp	.+1578   	; 0x670 <_exit>

00000046 <__bad_interrupt>:
  46:	dc cf       	rjmp	.-72     	; 0x0 <__vectors>

00000048 <initUSART>:
  48:	90 bd       	out	0x20, r25	; 32
  4a:	89 b9       	out	0x09, r24	; 9
  4c:	88 e9       	ldi	r24, 0x98	; 152
  4e:	8a b9       	out	0x0a, r24	; 10
  50:	86 e8       	ldi	r24, 0x86	; 134
  52:	80 bd       	out	0x20, r24	; 32
  54:	08 95       	ret

00000056 <sendUSART>:
  56:	5d 9b       	sbis	0x0b, 5	; 11
  58:	fe cf       	rjmp	.-4      	; 0x56 <sendUSART>
  5a:	8c b9       	out	0x0c, r24	; 12
  5c:	08 95       	ret

0000005e <uart_puts>:
  5e:	cf 93       	push	r28
  60:	df 93       	push	r29
  62:	ec 01       	movw	r28, r24
  64:	89 91       	ld	r24, Y+
  66:	88 23       	and	r24, r24
  68:	11 f0       	breq	.+4      	; 0x6e <uart_puts+0x10>
  6a:	f5 df       	rcall	.-22     	; 0x56 <sendUSART>
  6c:	fb cf       	rjmp	.-10     	; 0x64 <uart_puts+0x6>
  6e:	df 91       	pop	r29
  70:	cf 91       	pop	r28
  72:	08 95       	ret

00000074 <uart_putint>:
  74:	cf 93       	push	r28
  76:	df 93       	push	r29
  78:	cd b7       	in	r28, 0x3d	; 61
  7a:	de b7       	in	r29, 0x3e	; 62
  7c:	61 97       	sbiw	r28, 0x11	; 17
  7e:	0f b6       	in	r0, 0x3f	; 63
  80:	f8 94       	cli
  82:	de bf       	out	0x3e, r29	; 62
  84:	0f be       	out	0x3f, r0	; 63
  86:	cd bf       	out	0x3d, r28	; 61
  88:	ab 01       	movw	r20, r22
  8a:	be 01       	movw	r22, r28
  8c:	6f 5f       	subi	r22, 0xFF	; 255
  8e:	7f 4f       	sbci	r23, 0xFF	; 255
  90:	b2 d2       	rcall	.+1380   	; 0x5f6 <itoa>
  92:	ce 01       	movw	r24, r28
  94:	01 96       	adiw	r24, 0x01	; 1
  96:	e3 df       	rcall	.-58     	; 0x5e <uart_puts>
  98:	61 96       	adiw	r28, 0x11	; 17
  9a:	0f b6       	in	r0, 0x3f	; 63
  9c:	f8 94       	cli
  9e:	de bf       	out	0x3e, r29	; 62
  a0:	0f be       	out	0x3f, r0	; 63
  a2:	cd bf       	out	0x3d, r28	; 61
  a4:	df 91       	pop	r29
  a6:	cf 91       	pop	r28
  a8:	08 95       	ret

000000aa <__vector_11>:
  aa:	1f 92       	push	r1
  ac:	0f 92       	push	r0
  ae:	0f b6       	in	r0, 0x3f	; 63
  b0:	0f 92       	push	r0
  b2:	11 24       	eor	r1, r1
  b4:	2f 93       	push	r18
  b6:	3f 93       	push	r19
  b8:	4f 93       	push	r20
  ba:	5f 93       	push	r21
  bc:	6f 93       	push	r22
  be:	7f 93       	push	r23
  c0:	8f 93       	push	r24
  c2:	9f 93       	push	r25
  c4:	af 93       	push	r26
  c6:	bf 93       	push	r27
  c8:	ef 93       	push	r30
  ca:	ff 93       	push	r31
  cc:	8c b1       	in	r24, 0x0c	; 12
  ce:	81 32       	cpi	r24, 0x21	; 33
  d0:	59 f0       	breq	.+22     	; 0xe8 <__vector_11+0x3e>
  d2:	e0 91 62 00 	lds	r30, 0x0062
  d6:	91 e0       	ldi	r25, 0x01	; 1
  d8:	9e 0f       	add	r25, r30
  da:	90 93 62 00 	sts	0x0062, r25
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	e0 5a       	subi	r30, 0xA0	; 160
  e2:	ff 4f       	sbci	r31, 0xFF	; 255
  e4:	80 83       	st	Z, r24
  e6:	2e c0       	rjmp	.+92     	; 0x144 <__vector_11+0x9a>
  e8:	10 92 62 00 	sts	0x0062, r1
  ec:	80 91 60 00 	lds	r24, 0x0060
  f0:	86 34       	cpi	r24, 0x46	; 70
  f2:	89 f0       	breq	.+34     	; 0x116 <__vector_11+0x6c>
  f4:	18 f4       	brcc	.+6      	; 0xfc <__vector_11+0x52>
  f6:	83 34       	cpi	r24, 0x43	; 67
  f8:	31 f0       	breq	.+12     	; 0x106 <__vector_11+0x5c>
  fa:	24 c0       	rjmp	.+72     	; 0x144 <__vector_11+0x9a>
  fc:	83 35       	cpi	r24, 0x53	; 83
  fe:	d9 f0       	breq	.+54     	; 0x136 <__vector_11+0x8c>
 100:	84 35       	cpi	r24, 0x54	; 84
 102:	89 f0       	breq	.+34     	; 0x126 <__vector_11+0x7c>
 104:	1f c0       	rjmp	.+62     	; 0x144 <__vector_11+0x9a>
 106:	80 91 61 00 	lds	r24, 0x0061
 10a:	9f ec       	ldi	r25, 0xCF	; 207
 10c:	98 0f       	add	r25, r24
 10e:	93 30       	cpi	r25, 0x03	; 3
 110:	c8 f4       	brcc	.+50     	; 0x144 <__vector_11+0x9a>
 112:	99 d1       	rcall	.+818    	; 0x446 <setSamplingChannel>
 114:	17 c0       	rjmp	.+46     	; 0x144 <__vector_11+0x9a>
 116:	80 91 61 00 	lds	r24, 0x0061
 11a:	90 ed       	ldi	r25, 0xD0	; 208
 11c:	98 0f       	add	r25, r24
 11e:	9a 30       	cpi	r25, 0x0A	; 10
 120:	88 f4       	brcc	.+34     	; 0x144 <__vector_11+0x9a>
 122:	9f d1       	rcall	.+830    	; 0x462 <setSamplingFreq>
 124:	0f c0       	rjmp	.+30     	; 0x144 <__vector_11+0x9a>
 126:	80 91 61 00 	lds	r24, 0x0061
 12a:	90 ed       	ldi	r25, 0xD0	; 208
 12c:	98 0f       	add	r25, r24
 12e:	9a 30       	cpi	r25, 0x0A	; 10
 130:	48 f4       	brcc	.+18     	; 0x144 <__vector_11+0x9a>
 132:	cd d1       	rcall	.+922    	; 0x4ce <setSamplingTime>
 134:	07 c0       	rjmp	.+14     	; 0x144 <__vector_11+0x9a>
 136:	80 91 61 00 	lds	r24, 0x0061
 13a:	9f ec       	ldi	r25, 0xCF	; 207
 13c:	98 0f       	add	r25, r24
 13e:	92 30       	cpi	r25, 0x02	; 2
 140:	08 f4       	brcc	.+2      	; 0x144 <__vector_11+0x9a>
 142:	07 d2       	rcall	.+1038   	; 0x552 <setSamplingStart>
 144:	ff 91       	pop	r31
 146:	ef 91       	pop	r30
 148:	bf 91       	pop	r27
 14a:	af 91       	pop	r26
 14c:	9f 91       	pop	r25
 14e:	8f 91       	pop	r24
 150:	7f 91       	pop	r23
 152:	6f 91       	pop	r22
 154:	5f 91       	pop	r21
 156:	4f 91       	pop	r20
 158:	3f 91       	pop	r19
 15a:	2f 91       	pop	r18
 15c:	0f 90       	pop	r0
 15e:	0f be       	out	0x3f, r0	; 63
 160:	0f 90       	pop	r0
 162:	1f 90       	pop	r1
 164:	18 95       	reti

00000166 <setTimer>:
 166:	25 b5       	in	r18, 0x25	; 37
 168:	28 60       	ori	r18, 0x08	; 8
 16a:	25 bd       	out	0x25, r18	; 37
 16c:	25 b5       	in	r18, 0x25	; 37
 16e:	24 60       	ori	r18, 0x04	; 4
 170:	25 bd       	out	0x25, r18	; 37
 172:	88 3e       	cpi	r24, 0xE8	; 232
 174:	23 e0       	ldi	r18, 0x03	; 3
 176:	92 07       	cpc	r25, r18
 178:	11 f4       	brne	.+4      	; 0x17e <setTimer+0x18>
 17a:	29 ef       	ldi	r18, 0xF9	; 249
 17c:	05 c0       	rjmp	.+10     	; 0x188 <setTimer+0x22>
 17e:	80 3d       	cpi	r24, 0xD0	; 208
 180:	27 e0       	ldi	r18, 0x07	; 7
 182:	92 07       	cpc	r25, r18
 184:	19 f4       	brne	.+6      	; 0x18c <setTimer+0x26>
 186:	2c e7       	ldi	r18, 0x7C	; 124
 188:	23 bd       	out	0x23, r18	; 35
 18a:	15 c0       	rjmp	.+42     	; 0x1b6 <setTimer+0x50>
 18c:	88 3b       	cpi	r24, 0xB8	; 184
 18e:	2b e0       	ldi	r18, 0x0B	; 11
 190:	92 07       	cpc	r25, r18
 192:	19 f4       	brne	.+6      	; 0x19a <setTimer+0x34>
 194:	22 e5       	ldi	r18, 0x52	; 82
 196:	23 bd       	out	0x23, r18	; 35
 198:	14 c0       	rjmp	.+40     	; 0x1c2 <setTimer+0x5c>
 19a:	80 3a       	cpi	r24, 0xA0	; 160
 19c:	2f e0       	ldi	r18, 0x0F	; 15
 19e:	92 07       	cpc	r25, r18
 1a0:	19 f4       	brne	.+6      	; 0x1a8 <setTimer+0x42>
 1a2:	2d e3       	ldi	r18, 0x3D	; 61
 1a4:	23 bd       	out	0x23, r18	; 35
 1a6:	19 c0       	rjmp	.+50     	; 0x1da <setTimer+0x74>
 1a8:	88 38       	cpi	r24, 0x88	; 136
 1aa:	23 e1       	ldi	r18, 0x13	; 19
 1ac:	92 07       	cpc	r25, r18
 1ae:	19 f4       	brne	.+6      	; 0x1b6 <setTimer+0x50>
 1b0:	21 e3       	ldi	r18, 0x31	; 49
 1b2:	23 bd       	out	0x23, r18	; 35
 1b4:	18 c0       	rjmp	.+48     	; 0x1e6 <setTimer+0x80>
 1b6:	80 37       	cpi	r24, 0x70	; 112
 1b8:	27 e1       	ldi	r18, 0x17	; 23
 1ba:	92 07       	cpc	r25, r18
 1bc:	11 f4       	brne	.+4      	; 0x1c2 <setTimer+0x5c>
 1be:	88 e2       	ldi	r24, 0x28	; 40
 1c0:	16 c0       	rjmp	.+44     	; 0x1ee <setTimer+0x88>
 1c2:	88 35       	cpi	r24, 0x58	; 88
 1c4:	2b e1       	ldi	r18, 0x1B	; 27
 1c6:	92 07       	cpc	r25, r18
 1c8:	11 f4       	brne	.+4      	; 0x1ce <setTimer+0x68>
 1ca:	82 e2       	ldi	r24, 0x22	; 34
 1cc:	10 c0       	rjmp	.+32     	; 0x1ee <setTimer+0x88>
 1ce:	80 34       	cpi	r24, 0x40	; 64
 1d0:	2f e1       	ldi	r18, 0x1F	; 31
 1d2:	92 07       	cpc	r25, r18
 1d4:	11 f4       	brne	.+4      	; 0x1da <setTimer+0x74>
 1d6:	8e e1       	ldi	r24, 0x1E	; 30
 1d8:	0a c0       	rjmp	.+20     	; 0x1ee <setTimer+0x88>
 1da:	88 32       	cpi	r24, 0x28	; 40
 1dc:	23 e2       	ldi	r18, 0x23	; 35
 1de:	92 07       	cpc	r25, r18
 1e0:	11 f4       	brne	.+4      	; 0x1e6 <setTimer+0x80>
 1e2:	8a e1       	ldi	r24, 0x1A	; 26
 1e4:	04 c0       	rjmp	.+8      	; 0x1ee <setTimer+0x88>
 1e6:	80 31       	cpi	r24, 0x10	; 16
 1e8:	97 42       	sbci	r25, 0x27	; 39
 1ea:	11 f4       	brne	.+4      	; 0x1f0 <setTimer+0x8a>
 1ec:	88 e1       	ldi	r24, 0x18	; 24
 1ee:	83 bd       	out	0x23, r24	; 35
 1f0:	89 b7       	in	r24, 0x39	; 57
 1f2:	80 68       	ori	r24, 0x80	; 128
 1f4:	89 bf       	out	0x39, r24	; 57
 1f6:	08 95       	ret

000001f8 <initTimer2>:
 1f8:	85 b5       	in	r24, 0x25	; 37
 1fa:	88 60       	ori	r24, 0x08	; 8
 1fc:	85 bd       	out	0x25, r24	; 37
 1fe:	85 b5       	in	r24, 0x25	; 37
 200:	84 60       	ori	r24, 0x04	; 4
 202:	85 bd       	out	0x25, r24	; 37
 204:	89 b7       	in	r24, 0x39	; 57
 206:	80 68       	ori	r24, 0x80	; 128
 208:	89 bf       	out	0x39, r24	; 57
 20a:	82 e5       	ldi	r24, 0x52	; 82
 20c:	83 bd       	out	0x23, r24	; 35
 20e:	08 95       	ret

00000210 <stopTimer2>:
 210:	85 b5       	in	r24, 0x25	; 37
 212:	8b 7f       	andi	r24, 0xFB	; 251
 214:	85 bd       	out	0x25, r24	; 37
 216:	08 95       	ret

00000218 <__vector_3>:
 218:	1f 92       	push	r1
 21a:	0f 92       	push	r0
 21c:	0f b6       	in	r0, 0x3f	; 63
 21e:	0f 92       	push	r0
 220:	11 24       	eor	r1, r1
 222:	2f 93       	push	r18
 224:	3f 93       	push	r19
 226:	4f 93       	push	r20
 228:	5f 93       	push	r21
 22a:	6f 93       	push	r22
 22c:	7f 93       	push	r23
 22e:	8f 93       	push	r24
 230:	9f 93       	push	r25
 232:	af 93       	push	r26
 234:	bf 93       	push	r27
 236:	ef 93       	push	r30
 238:	ff 93       	push	r31
 23a:	98 d0       	rcall	.+304    	; 0x36c <startSampling>
 23c:	ff 91       	pop	r31
 23e:	ef 91       	pop	r30
 240:	bf 91       	pop	r27
 242:	af 91       	pop	r26
 244:	9f 91       	pop	r25
 246:	8f 91       	pop	r24
 248:	7f 91       	pop	r23
 24a:	6f 91       	pop	r22
 24c:	5f 91       	pop	r21
 24e:	4f 91       	pop	r20
 250:	3f 91       	pop	r19
 252:	2f 91       	pop	r18
 254:	0f 90       	pop	r0
 256:	0f be       	out	0x3f, r0	; 63
 258:	0f 90       	pop	r0
 25a:	1f 90       	pop	r1
 25c:	18 95       	reti

0000025e <initSRAMControl>:
 25e:	81 b3       	in	r24, 0x11	; 17
 260:	8c 61       	ori	r24, 0x1C	; 28
 262:	81 bb       	out	0x11, r24	; 17
 264:	82 b3       	in	r24, 0x12	; 18
 266:	8c 60       	ori	r24, 0x0C	; 12
 268:	82 bb       	out	0x12, r24	; 18
 26a:	94 98       	cbi	0x12, 4	; 18
 26c:	08 95       	ret

0000026e <initLatch1>:
 26e:	b8 9a       	sbi	0x17, 0	; 23
 270:	c0 98       	cbi	0x18, 0	; 24
 272:	08 95       	ret

00000274 <initLatch2>:
 274:	b9 9a       	sbi	0x17, 1	; 23
 276:	c1 98       	cbi	0x18, 1	; 24
 278:	08 95       	ret

0000027a <dataPortOutput>:
 27a:	8f ef       	ldi	r24, 0xFF	; 255
 27c:	84 bb       	out	0x14, r24	; 20
 27e:	81 b3       	in	r24, 0x11	; 17
 280:	80 66       	ori	r24, 0x60	; 96
 282:	81 bb       	out	0x11, r24	; 17
 284:	08 95       	ret

00000286 <dataPortInput>:
 286:	80 ec       	ldi	r24, 0xC0	; 192
 288:	84 bb       	out	0x14, r24	; 20
 28a:	81 b3       	in	r24, 0x11	; 17
 28c:	8f 79       	andi	r24, 0x9F	; 159
 28e:	81 bb       	out	0x11, r24	; 17
 290:	08 95       	ret

00000292 <setAddress>:
 292:	cf 93       	push	r28
 294:	df 93       	push	r29
 296:	00 d0       	rcall	.+0      	; 0x298 <setAddress+0x6>
 298:	cd b7       	in	r28, 0x3d	; 61
 29a:	de b7       	in	r29, 0x3e	; 62
 29c:	89 83       	std	Y+1, r24	; 0x01
 29e:	9a 83       	std	Y+2, r25	; 0x02
 2a0:	ec df       	rcall	.-40     	; 0x27a <dataPortOutput>
 2a2:	20 ec       	ldi	r18, 0xC0	; 192
 2a4:	25 bb       	out	0x15, r18	; 21
 2a6:	32 b3       	in	r19, 0x12	; 18
 2a8:	3f 79       	andi	r19, 0x9F	; 159
 2aa:	32 bb       	out	0x12, r19	; 18
 2ac:	45 b3       	in	r20, 0x15	; 21
 2ae:	89 81       	ldd	r24, Y+1	; 0x01
 2b0:	38 2f       	mov	r19, r24
 2b2:	3f 73       	andi	r19, 0x3F	; 63
 2b4:	34 2b       	or	r19, r20
 2b6:	35 bb       	out	0x15, r19	; 21
 2b8:	32 b3       	in	r19, 0x12	; 18
 2ba:	80 7c       	andi	r24, 0xC0	; 192
 2bc:	86 95       	lsr	r24
 2be:	83 2b       	or	r24, r19
 2c0:	82 bb       	out	0x12, r24	; 18
 2c2:	c0 9a       	sbi	0x18, 0	; 24
 2c4:	c0 98       	cbi	0x18, 0	; 24
 2c6:	25 bb       	out	0x15, r18	; 21
 2c8:	82 b3       	in	r24, 0x12	; 18
 2ca:	8f 79       	andi	r24, 0x9F	; 159
 2cc:	82 bb       	out	0x12, r24	; 18
 2ce:	35 b3       	in	r19, 0x15	; 21
 2d0:	9a 81       	ldd	r25, Y+2	; 0x02
 2d2:	89 2f       	mov	r24, r25
 2d4:	8f 73       	andi	r24, 0x3F	; 63
 2d6:	83 2b       	or	r24, r19
 2d8:	85 bb       	out	0x15, r24	; 21
 2da:	82 b3       	in	r24, 0x12	; 18
 2dc:	96 95       	lsr	r25
 2de:	98 2b       	or	r25, r24
 2e0:	92 bb       	out	0x12, r25	; 18
 2e2:	c1 9a       	sbi	0x18, 1	; 24
 2e4:	c1 98       	cbi	0x18, 1	; 24
 2e6:	25 bb       	out	0x15, r18	; 21
 2e8:	82 b3       	in	r24, 0x12	; 18
 2ea:	8f 79       	andi	r24, 0x9F	; 159
 2ec:	82 bb       	out	0x12, r24	; 18
 2ee:	0f 90       	pop	r0
 2f0:	0f 90       	pop	r0
 2f2:	df 91       	pop	r29
 2f4:	cf 91       	pop	r28
 2f6:	08 95       	ret

000002f8 <writeByte>:
 2f8:	cf 93       	push	r28
 2fa:	df 93       	push	r29
 2fc:	1f 92       	push	r1
 2fe:	cd b7       	in	r28, 0x3d	; 61
 300:	de b7       	in	r29, 0x3e	; 62
 302:	89 83       	std	Y+1, r24	; 0x01
 304:	ba df       	rcall	.-140    	; 0x27a <dataPortOutput>
 306:	20 ec       	ldi	r18, 0xC0	; 192
 308:	25 bb       	out	0x15, r18	; 21
 30a:	92 b3       	in	r25, 0x12	; 18
 30c:	9f 79       	andi	r25, 0x9F	; 159
 30e:	92 bb       	out	0x12, r25	; 18
 310:	35 b3       	in	r19, 0x15	; 21
 312:	89 81       	ldd	r24, Y+1	; 0x01
 314:	98 2f       	mov	r25, r24
 316:	9f 73       	andi	r25, 0x3F	; 63
 318:	93 2b       	or	r25, r19
 31a:	95 bb       	out	0x15, r25	; 21
 31c:	92 b3       	in	r25, 0x12	; 18
 31e:	80 7c       	andi	r24, 0xC0	; 192
 320:	86 95       	lsr	r24
 322:	89 2b       	or	r24, r25
 324:	82 bb       	out	0x12, r24	; 18
 326:	92 98       	cbi	0x12, 2	; 18
 328:	92 9a       	sbi	0x12, 2	; 18
 32a:	25 bb       	out	0x15, r18	; 21
 32c:	82 b3       	in	r24, 0x12	; 18
 32e:	8f 79       	andi	r24, 0x9F	; 159
 330:	82 bb       	out	0x12, r24	; 18
 332:	0f 90       	pop	r0
 334:	df 91       	pop	r29
 336:	cf 91       	pop	r28
 338:	08 95       	ret

0000033a <readByte>:
 33a:	a5 df       	rcall	.-182    	; 0x286 <dataPortInput>
 33c:	93 98       	cbi	0x12, 3	; 18
 33e:	85 e0       	ldi	r24, 0x05	; 5
 340:	8a 95       	dec	r24
 342:	f1 f7       	brne	.-4      	; 0x340 <readByte+0x6>
 344:	00 00       	nop
 346:	93 b3       	in	r25, 0x13	; 19
 348:	80 b3       	in	r24, 0x10	; 16
 34a:	80 76       	andi	r24, 0x60	; 96
 34c:	88 0f       	add	r24, r24
 34e:	93 9a       	sbi	0x12, 3	; 18
 350:	89 2b       	or	r24, r25
 352:	08 95       	ret

00000354 <initSPI>:
 354:	87 b3       	in	r24, 0x17	; 23
 356:	8c 62       	ori	r24, 0x2C	; 44
 358:	87 bb       	out	0x17, r24	; 23
 35a:	8d b1       	in	r24, 0x0d	; 13
 35c:	81 65       	ori	r24, 0x51	; 81
 35e:	8d b9       	out	0x0d, r24	; 13
 360:	08 95       	ret

00000362 <sendSPI>:
 362:	8f b9       	out	0x0f, r24	; 15
 364:	77 9b       	sbis	0x0e, 7	; 14
 366:	fe cf       	rjmp	.-4      	; 0x364 <sendSPI+0x2>
 368:	8f b1       	in	r24, 0x0f	; 15
 36a:	08 95       	ret

0000036c <startSampling>:
 36c:	ef 92       	push	r14
 36e:	ff 92       	push	r15
 370:	0f 93       	push	r16
 372:	1f 93       	push	r17
 374:	cf 93       	push	r28
 376:	df 93       	push	r29
 378:	00 d0       	rcall	.+0      	; 0x37a <startSampling+0xe>
 37a:	cd b7       	in	r28, 0x3d	; 61
 37c:	de b7       	in	r29, 0x3e	; 62
 37e:	be 01       	movw	r22, r28
 380:	6f 5f       	subi	r22, 0xFF	; 255
 382:	7f 4f       	sbci	r23, 0xFF	; 255
 384:	ce 01       	movw	r24, r28
 386:	02 96       	adiw	r24, 0x02	; 2
 388:	fe d0       	rcall	.+508    	; 0x586 <makeSampleChannelA>
 38a:	80 91 65 00 	lds	r24, 0x0065
 38e:	90 91 66 00 	lds	r25, 0x0066
 392:	7f df       	rcall	.-258    	; 0x292 <setAddress>
 394:	8a 81       	ldd	r24, Y+2	; 0x02
 396:	b0 df       	rcall	.-160    	; 0x2f8 <writeByte>
 398:	80 91 65 00 	lds	r24, 0x0065
 39c:	90 91 66 00 	lds	r25, 0x0066
 3a0:	01 96       	adiw	r24, 0x01	; 1
 3a2:	90 93 66 00 	sts	0x0066, r25
 3a6:	80 93 65 00 	sts	0x0065, r24
 3aa:	73 df       	rcall	.-282    	; 0x292 <setAddress>
 3ac:	89 81       	ldd	r24, Y+1	; 0x01
 3ae:	a4 df       	rcall	.-184    	; 0x2f8 <writeByte>
 3b0:	80 91 65 00 	lds	r24, 0x0065
 3b4:	90 91 66 00 	lds	r25, 0x0066
 3b8:	01 96       	adiw	r24, 0x01	; 1
 3ba:	90 93 66 00 	sts	0x0066, r25
 3be:	80 93 65 00 	sts	0x0065, r24
 3c2:	80 91 63 00 	lds	r24, 0x0063
 3c6:	90 91 64 00 	lds	r25, 0x0064
 3ca:	01 96       	adiw	r24, 0x01	; 1
 3cc:	90 93 64 00 	sts	0x0064, r25
 3d0:	80 93 63 00 	sts	0x0063, r24
 3d4:	20 91 67 00 	lds	r18, 0x0067
 3d8:	30 91 68 00 	lds	r19, 0x0068
 3dc:	28 17       	cp	r18, r24
 3de:	39 07       	cpc	r19, r25
 3e0:	48 f5       	brcc	.+82     	; 0x434 <startSampling+0xc8>
 3e2:	16 df       	rcall	.-468    	; 0x210 <stopTimer2>
 3e4:	00 e0       	ldi	r16, 0x00	; 0
 3e6:	10 e0       	ldi	r17, 0x00	; 0
 3e8:	80 91 65 00 	lds	r24, 0x0065
 3ec:	90 91 66 00 	lds	r25, 0x0066
 3f0:	08 17       	cp	r16, r24
 3f2:	19 07       	cpc	r17, r25
 3f4:	e0 f4       	brcc	.+56     	; 0x42e <startSampling+0xc2>
 3f6:	c8 01       	movw	r24, r16
 3f8:	4c df       	rcall	.-360    	; 0x292 <setAddress>
 3fa:	9f df       	rcall	.-194    	; 0x33a <readByte>
 3fc:	e8 2e       	mov	r14, r24
 3fe:	f1 2c       	mov	r15, r1
 400:	fe 2c       	mov	r15, r14
 402:	ee 24       	eor	r14, r14
 404:	c8 01       	movw	r24, r16
 406:	01 96       	adiw	r24, 0x01	; 1
 408:	44 df       	rcall	.-376    	; 0x292 <setAddress>
 40a:	97 df       	rcall	.-210    	; 0x33a <readByte>
 40c:	6a e0       	ldi	r22, 0x0A	; 10
 40e:	70 e0       	ldi	r23, 0x00	; 0
 410:	97 01       	movw	r18, r14
 412:	28 2b       	or	r18, r24
 414:	c9 01       	movw	r24, r18
 416:	2e de       	rcall	.-932    	; 0x74 <uart_putint>
 418:	8c e2       	ldi	r24, 0x2C	; 44
 41a:	1d de       	rcall	.-966    	; 0x56 <sendUSART>
 41c:	8f e9       	ldi	r24, 0x9F	; 159
 41e:	9f e0       	ldi	r25, 0x0F	; 15
 420:	01 97       	sbiw	r24, 0x01	; 1
 422:	f1 f7       	brne	.-4      	; 0x420 <startSampling+0xb4>
 424:	00 c0       	rjmp	.+0      	; 0x426 <startSampling+0xba>
 426:	00 00       	nop
 428:	0e 5f       	subi	r16, 0xFE	; 254
 42a:	1f 4f       	sbci	r17, 0xFF	; 255
 42c:	dd cf       	rjmp	.-70     	; 0x3e8 <startSampling+0x7c>
 42e:	81 e2       	ldi	r24, 0x21	; 33
 430:	12 de       	rcall	.-988    	; 0x56 <sendUSART>
 432:	ff cf       	rjmp	.-2      	; 0x432 <startSampling+0xc6>
 434:	0f 90       	pop	r0
 436:	0f 90       	pop	r0
 438:	df 91       	pop	r29
 43a:	cf 91       	pop	r28
 43c:	1f 91       	pop	r17
 43e:	0f 91       	pop	r16
 440:	ff 90       	pop	r15
 442:	ef 90       	pop	r14
 444:	08 95       	ret

00000446 <setSamplingChannel>:
 446:	81 33       	cpi	r24, 0x31	; 49
 448:	11 f4       	brne	.+4      	; 0x44e <setSamplingChannel+0x8>
 44a:	81 e0       	ldi	r24, 0x01	; 1
 44c:	07 c0       	rjmp	.+14     	; 0x45c <setSamplingChannel+0x16>
 44e:	82 33       	cpi	r24, 0x32	; 50
 450:	11 f4       	brne	.+4      	; 0x456 <setSamplingChannel+0x10>
 452:	82 e0       	ldi	r24, 0x02	; 2
 454:	03 c0       	rjmp	.+6      	; 0x45c <setSamplingChannel+0x16>
 456:	83 33       	cpi	r24, 0x33	; 51
 458:	19 f4       	brne	.+6      	; 0x460 <__stack+0x1>
 45a:	83 e0       	ldi	r24, 0x03	; 3
 45c:	80 93 8b 00 	sts	0x008B, r24
 460:	08 95       	ret

00000462 <setSamplingFreq>:
 462:	80 33       	cpi	r24, 0x30	; 48
 464:	19 f4       	brne	.+6      	; 0x46c <setSamplingFreq+0xa>
 466:	88 ee       	ldi	r24, 0xE8	; 232
 468:	93 e0       	ldi	r25, 0x03	; 3
 46a:	2c c0       	rjmp	.+88     	; 0x4c4 <setSamplingFreq+0x62>
 46c:	81 33       	cpi	r24, 0x31	; 49
 46e:	19 f4       	brne	.+6      	; 0x476 <setSamplingFreq+0x14>
 470:	80 ed       	ldi	r24, 0xD0	; 208
 472:	97 e0       	ldi	r25, 0x07	; 7
 474:	27 c0       	rjmp	.+78     	; 0x4c4 <setSamplingFreq+0x62>
 476:	82 33       	cpi	r24, 0x32	; 50
 478:	19 f4       	brne	.+6      	; 0x480 <setSamplingFreq+0x1e>
 47a:	88 eb       	ldi	r24, 0xB8	; 184
 47c:	9b e0       	ldi	r25, 0x0B	; 11
 47e:	22 c0       	rjmp	.+68     	; 0x4c4 <setSamplingFreq+0x62>
 480:	83 33       	cpi	r24, 0x33	; 51
 482:	19 f4       	brne	.+6      	; 0x48a <setSamplingFreq+0x28>
 484:	80 ea       	ldi	r24, 0xA0	; 160
 486:	9f e0       	ldi	r25, 0x0F	; 15
 488:	1d c0       	rjmp	.+58     	; 0x4c4 <setSamplingFreq+0x62>
 48a:	84 33       	cpi	r24, 0x34	; 52
 48c:	19 f4       	brne	.+6      	; 0x494 <setSamplingFreq+0x32>
 48e:	88 e8       	ldi	r24, 0x88	; 136
 490:	93 e1       	ldi	r25, 0x13	; 19
 492:	18 c0       	rjmp	.+48     	; 0x4c4 <setSamplingFreq+0x62>
 494:	85 33       	cpi	r24, 0x35	; 53
 496:	19 f4       	brne	.+6      	; 0x49e <setSamplingFreq+0x3c>
 498:	80 e7       	ldi	r24, 0x70	; 112
 49a:	97 e1       	ldi	r25, 0x17	; 23
 49c:	13 c0       	rjmp	.+38     	; 0x4c4 <setSamplingFreq+0x62>
 49e:	86 33       	cpi	r24, 0x36	; 54
 4a0:	19 f4       	brne	.+6      	; 0x4a8 <setSamplingFreq+0x46>
 4a2:	88 e5       	ldi	r24, 0x58	; 88
 4a4:	9b e1       	ldi	r25, 0x1B	; 27
 4a6:	0e c0       	rjmp	.+28     	; 0x4c4 <setSamplingFreq+0x62>
 4a8:	87 33       	cpi	r24, 0x37	; 55
 4aa:	19 f4       	brne	.+6      	; 0x4b2 <setSamplingFreq+0x50>
 4ac:	80 e4       	ldi	r24, 0x40	; 64
 4ae:	9f e1       	ldi	r25, 0x1F	; 31
 4b0:	09 c0       	rjmp	.+18     	; 0x4c4 <setSamplingFreq+0x62>
 4b2:	88 33       	cpi	r24, 0x38	; 56
 4b4:	19 f4       	brne	.+6      	; 0x4bc <setSamplingFreq+0x5a>
 4b6:	88 e2       	ldi	r24, 0x28	; 40
 4b8:	93 e2       	ldi	r25, 0x23	; 35
 4ba:	04 c0       	rjmp	.+8      	; 0x4c4 <setSamplingFreq+0x62>
 4bc:	89 33       	cpi	r24, 0x39	; 57
 4be:	31 f4       	brne	.+12     	; 0x4cc <setSamplingFreq+0x6a>
 4c0:	80 e1       	ldi	r24, 0x10	; 16
 4c2:	97 e2       	ldi	r25, 0x27	; 39
 4c4:	90 93 8e 00 	sts	0x008E, r25
 4c8:	80 93 8d 00 	sts	0x008D, r24
 4cc:	08 95       	ret

000004ce <setSamplingTime>:
 4ce:	80 33       	cpi	r24, 0x30	; 48
 4d0:	11 f4       	brne	.+4      	; 0x4d6 <setSamplingTime+0x8>
 4d2:	81 e0       	ldi	r24, 0x01	; 1
 4d4:	23 c0       	rjmp	.+70     	; 0x51c <setSamplingTime+0x4e>
 4d6:	81 33       	cpi	r24, 0x31	; 49
 4d8:	11 f4       	brne	.+4      	; 0x4de <setSamplingTime+0x10>
 4da:	82 e0       	ldi	r24, 0x02	; 2
 4dc:	1f c0       	rjmp	.+62     	; 0x51c <setSamplingTime+0x4e>
 4de:	82 33       	cpi	r24, 0x32	; 50
 4e0:	11 f4       	brne	.+4      	; 0x4e6 <setSamplingTime+0x18>
 4e2:	83 e0       	ldi	r24, 0x03	; 3
 4e4:	1b c0       	rjmp	.+54     	; 0x51c <setSamplingTime+0x4e>
 4e6:	83 33       	cpi	r24, 0x33	; 51
 4e8:	11 f4       	brne	.+4      	; 0x4ee <setSamplingTime+0x20>
 4ea:	84 e0       	ldi	r24, 0x04	; 4
 4ec:	17 c0       	rjmp	.+46     	; 0x51c <setSamplingTime+0x4e>
 4ee:	84 33       	cpi	r24, 0x34	; 52
 4f0:	11 f4       	brne	.+4      	; 0x4f6 <setSamplingTime+0x28>
 4f2:	85 e0       	ldi	r24, 0x05	; 5
 4f4:	13 c0       	rjmp	.+38     	; 0x51c <setSamplingTime+0x4e>
 4f6:	85 33       	cpi	r24, 0x35	; 53
 4f8:	11 f4       	brne	.+4      	; 0x4fe <setSamplingTime+0x30>
 4fa:	86 e0       	ldi	r24, 0x06	; 6
 4fc:	0f c0       	rjmp	.+30     	; 0x51c <setSamplingTime+0x4e>
 4fe:	86 33       	cpi	r24, 0x36	; 54
 500:	11 f4       	brne	.+4      	; 0x506 <setSamplingTime+0x38>
 502:	87 e0       	ldi	r24, 0x07	; 7
 504:	0b c0       	rjmp	.+22     	; 0x51c <setSamplingTime+0x4e>
 506:	87 33       	cpi	r24, 0x37	; 55
 508:	11 f4       	brne	.+4      	; 0x50e <setSamplingTime+0x40>
 50a:	88 e0       	ldi	r24, 0x08	; 8
 50c:	07 c0       	rjmp	.+14     	; 0x51c <setSamplingTime+0x4e>
 50e:	88 33       	cpi	r24, 0x38	; 56
 510:	11 f4       	brne	.+4      	; 0x516 <setSamplingTime+0x48>
 512:	89 e0       	ldi	r24, 0x09	; 9
 514:	03 c0       	rjmp	.+6      	; 0x51c <setSamplingTime+0x4e>
 516:	89 33       	cpi	r24, 0x39	; 57
 518:	19 f4       	brne	.+6      	; 0x520 <setSamplingTime+0x52>
 51a:	8a e0       	ldi	r24, 0x0A	; 10
 51c:	80 93 8c 00 	sts	0x008C, r24
 520:	08 95       	ret

00000522 <isSet>:
 522:	80 91 8b 00 	lds	r24, 0x008B
 526:	88 23       	and	r24, r24
 528:	59 f0       	breq	.+22     	; 0x540 <isSet+0x1e>
 52a:	80 91 8d 00 	lds	r24, 0x008D
 52e:	90 91 8e 00 	lds	r25, 0x008E
 532:	89 2b       	or	r24, r25
 534:	29 f0       	breq	.+10     	; 0x540 <isSet+0x1e>
 536:	81 e0       	ldi	r24, 0x01	; 1
 538:	90 91 8c 00 	lds	r25, 0x008C
 53c:	91 11       	cpse	r25, r1
 53e:	01 c0       	rjmp	.+2      	; 0x542 <isSet+0x20>
 540:	80 e0       	ldi	r24, 0x00	; 0
 542:	08 95       	ret

00000544 <isEnoughMemory>:
 544:	21 e0       	ldi	r18, 0x01	; 1
 546:	81 38       	cpi	r24, 0x81	; 129
 548:	9e 43       	sbci	r25, 0x3E	; 62
 54a:	08 f0       	brcs	.+2      	; 0x54e <isEnoughMemory+0xa>
 54c:	20 e0       	ldi	r18, 0x00	; 0
 54e:	82 2f       	mov	r24, r18
 550:	08 95       	ret

00000552 <setSamplingStart>:
 552:	e7 df       	rcall	.-50     	; 0x522 <isSet>
 554:	88 23       	and	r24, r24
 556:	99 f0       	breq	.+38     	; 0x57e <setSamplingStart+0x2c>
 558:	40 91 8c 00 	lds	r20, 0x008C
 55c:	80 91 8d 00 	lds	r24, 0x008D
 560:	90 91 8e 00 	lds	r25, 0x008E
 564:	48 9f       	mul	r20, r24
 566:	90 01       	movw	r18, r0
 568:	49 9f       	mul	r20, r25
 56a:	30 0d       	add	r19, r0
 56c:	11 24       	eor	r1, r1
 56e:	30 93 68 00 	sts	0x0068, r19
 572:	20 93 67 00 	sts	0x0067, r18
 576:	21 38       	cpi	r18, 0x81	; 129
 578:	3e 43       	sbci	r19, 0x3E	; 62
 57a:	08 f4       	brcc	.+2      	; 0x57e <setSamplingStart+0x2c>
 57c:	f4 cd       	rjmp	.-1048   	; 0x166 <setTimer>
 57e:	08 95       	ret

00000580 <initADC>:
 580:	ba 9a       	sbi	0x17, 2	; 23
 582:	c2 9a       	sbi	0x18, 2	; 24
 584:	08 95       	ret

00000586 <makeSampleChannelA>:
 586:	0f 93       	push	r16
 588:	1f 93       	push	r17
 58a:	cf 93       	push	r28
 58c:	df 93       	push	r29
 58e:	ec 01       	movw	r28, r24
 590:	8b 01       	movw	r16, r22
 592:	c2 98       	cbi	0x18, 2	; 24
 594:	8c e0       	ldi	r24, 0x0C	; 12
 596:	e5 de       	rcall	.-566    	; 0x362 <sendSPI>
 598:	80 e0       	ldi	r24, 0x00	; 0
 59a:	e3 de       	rcall	.-570    	; 0x362 <sendSPI>
 59c:	8f 70       	andi	r24, 0x0F	; 15
 59e:	88 83       	st	Y, r24
 5a0:	80 e0       	ldi	r24, 0x00	; 0
 5a2:	df de       	rcall	.-578    	; 0x362 <sendSPI>
 5a4:	f8 01       	movw	r30, r16
 5a6:	80 83       	st	Z, r24
 5a8:	c2 9a       	sbi	0x18, 2	; 24
 5aa:	df 91       	pop	r29
 5ac:	cf 91       	pop	r28
 5ae:	1f 91       	pop	r17
 5b0:	0f 91       	pop	r16
 5b2:	08 95       	ret

000005b4 <makeSampleChannelB>:
 5b4:	0f 93       	push	r16
 5b6:	1f 93       	push	r17
 5b8:	cf 93       	push	r28
 5ba:	df 93       	push	r29
 5bc:	ec 01       	movw	r28, r24
 5be:	8b 01       	movw	r16, r22
 5c0:	c2 98       	cbi	0x18, 2	; 24
 5c2:	8c e0       	ldi	r24, 0x0C	; 12
 5c4:	ce de       	rcall	.-612    	; 0x362 <sendSPI>
 5c6:	80 e8       	ldi	r24, 0x80	; 128
 5c8:	cc de       	rcall	.-616    	; 0x362 <sendSPI>
 5ca:	8f 70       	andi	r24, 0x0F	; 15
 5cc:	88 83       	st	Y, r24
 5ce:	80 e0       	ldi	r24, 0x00	; 0
 5d0:	c8 de       	rcall	.-624    	; 0x362 <sendSPI>
 5d2:	f8 01       	movw	r30, r16
 5d4:	80 83       	st	Z, r24
 5d6:	c2 9a       	sbi	0x18, 2	; 24
 5d8:	df 91       	pop	r29
 5da:	cf 91       	pop	r28
 5dc:	1f 91       	pop	r17
 5de:	0f 91       	pop	r16
 5e0:	08 95       	ret

000005e2 <main>:
 5e2:	78 94       	sei
 5e4:	87 e6       	ldi	r24, 0x67	; 103
 5e6:	90 e0       	ldi	r25, 0x00	; 0
 5e8:	2f dd       	rcall	.-1442   	; 0x48 <initUSART>
 5ea:	b4 de       	rcall	.-664    	; 0x354 <initSPI>
 5ec:	c9 df       	rcall	.-110    	; 0x580 <initADC>
 5ee:	3f de       	rcall	.-898    	; 0x26e <initLatch1>
 5f0:	41 de       	rcall	.-894    	; 0x274 <initLatch2>
 5f2:	35 de       	rcall	.-918    	; 0x25e <initSRAMControl>
 5f4:	ff cf       	rjmp	.-2      	; 0x5f4 <main+0x12>

000005f6 <itoa>:
 5f6:	45 32       	cpi	r20, 0x25	; 37
 5f8:	51 05       	cpc	r21, r1
 5fa:	18 f4       	brcc	.+6      	; 0x602 <itoa+0xc>
 5fc:	42 30       	cpi	r20, 0x02	; 2
 5fe:	08 f0       	brcs	.+2      	; 0x602 <itoa+0xc>
 600:	04 c0       	rjmp	.+8      	; 0x60a <__itoa_ncheck>
 602:	fb 01       	movw	r30, r22
 604:	10 82       	st	Z, r1
 606:	cb 01       	movw	r24, r22
 608:	08 95       	ret

0000060a <__itoa_ncheck>:
 60a:	bb 27       	eor	r27, r27
 60c:	4a 30       	cpi	r20, 0x0A	; 10
 60e:	31 f4       	brne	.+12     	; 0x61c <__itoa_ncheck+0x12>
 610:	99 23       	and	r25, r25
 612:	22 f4       	brpl	.+8      	; 0x61c <__itoa_ncheck+0x12>
 614:	bd e2       	ldi	r27, 0x2D	; 45
 616:	90 95       	com	r25
 618:	81 95       	neg	r24
 61a:	9f 4f       	sbci	r25, 0xFF	; 255
 61c:	01 c0       	rjmp	.+2      	; 0x620 <__utoa_common>

0000061e <__utoa_ncheck>:
 61e:	bb 27       	eor	r27, r27

00000620 <__utoa_common>:
 620:	fb 01       	movw	r30, r22
 622:	55 27       	eor	r21, r21
 624:	aa 27       	eor	r26, r26
 626:	88 0f       	add	r24, r24
 628:	99 1f       	adc	r25, r25
 62a:	aa 1f       	adc	r26, r26
 62c:	a4 17       	cp	r26, r20
 62e:	10 f0       	brcs	.+4      	; 0x634 <__utoa_common+0x14>
 630:	a4 1b       	sub	r26, r20
 632:	83 95       	inc	r24
 634:	50 51       	subi	r21, 0x10	; 16
 636:	b9 f7       	brne	.-18     	; 0x626 <__utoa_common+0x6>
 638:	a0 5d       	subi	r26, 0xD0	; 208
 63a:	aa 33       	cpi	r26, 0x3A	; 58
 63c:	08 f0       	brcs	.+2      	; 0x640 <__utoa_common+0x20>
 63e:	a9 5d       	subi	r26, 0xD9	; 217
 640:	a1 93       	st	Z+, r26
 642:	00 97       	sbiw	r24, 0x00	; 0
 644:	79 f7       	brne	.-34     	; 0x624 <__utoa_common+0x4>
 646:	b1 11       	cpse	r27, r1
 648:	b1 93       	st	Z+, r27
 64a:	11 92       	st	Z+, r1
 64c:	cb 01       	movw	r24, r22
 64e:	00 c0       	rjmp	.+0      	; 0x650 <strrev>

00000650 <strrev>:
 650:	dc 01       	movw	r26, r24
 652:	fc 01       	movw	r30, r24
 654:	67 2f       	mov	r22, r23
 656:	71 91       	ld	r23, Z+
 658:	77 23       	and	r23, r23
 65a:	e1 f7       	brne	.-8      	; 0x654 <strrev+0x4>
 65c:	32 97       	sbiw	r30, 0x02	; 2
 65e:	04 c0       	rjmp	.+8      	; 0x668 <strrev+0x18>
 660:	7c 91       	ld	r23, X
 662:	6d 93       	st	X+, r22
 664:	70 83       	st	Z, r23
 666:	62 91       	ld	r22, -Z
 668:	ae 17       	cp	r26, r30
 66a:	bf 07       	cpc	r27, r31
 66c:	c8 f3       	brcs	.-14     	; 0x660 <strrev+0x10>
 66e:	08 95       	ret

00000670 <_exit>:
 670:	f8 94       	cli

00000672 <__stop_program>:
 672:	ff cf       	rjmp	.-2      	; 0x672 <__stop_program>
