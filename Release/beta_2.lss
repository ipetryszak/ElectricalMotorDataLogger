
beta_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000026a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  000002be  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	ae d0       	rcall	.+348    	; 0x190 <main>
  34:	18 c1       	rjmp	.+560    	; 0x266 <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <initUSART>:
  38:	90 bd       	out	0x20, r25	; 32
  3a:	89 b9       	out	0x09, r24	; 9
  3c:	88 e9       	ldi	r24, 0x98	; 152
  3e:	8a b9       	out	0x0a, r24	; 10
  40:	86 e8       	ldi	r24, 0x86	; 134
  42:	80 bd       	out	0x20, r24	; 32
  44:	08 95       	ret

00000046 <sendUSART>:
  46:	5d 9b       	sbis	0x0b, 5	; 11
  48:	fe cf       	rjmp	.-4      	; 0x46 <sendUSART>
  4a:	8c b9       	out	0x0c, r24	; 12
  4c:	08 95       	ret

0000004e <uart_puts>:
  4e:	cf 93       	push	r28
  50:	df 93       	push	r29
  52:	ec 01       	movw	r28, r24
  54:	89 91       	ld	r24, Y+
  56:	88 23       	and	r24, r24
  58:	11 f0       	breq	.+4      	; 0x5e <uart_puts+0x10>
  5a:	f5 df       	rcall	.-22     	; 0x46 <sendUSART>
  5c:	fb cf       	rjmp	.-10     	; 0x54 <uart_puts+0x6>
  5e:	df 91       	pop	r29
  60:	cf 91       	pop	r28
  62:	08 95       	ret

00000064 <uart_putint>:
  64:	cf 93       	push	r28
  66:	df 93       	push	r29
  68:	cd b7       	in	r28, 0x3d	; 61
  6a:	de b7       	in	r29, 0x3e	; 62
  6c:	61 97       	sbiw	r28, 0x11	; 17
  6e:	0f b6       	in	r0, 0x3f	; 63
  70:	f8 94       	cli
  72:	de bf       	out	0x3e, r29	; 62
  74:	0f be       	out	0x3f, r0	; 63
  76:	cd bf       	out	0x3d, r28	; 61
  78:	ab 01       	movw	r20, r22
  7a:	be 01       	movw	r22, r28
  7c:	6f 5f       	subi	r22, 0xFF	; 255
  7e:	7f 4f       	sbci	r23, 0xFF	; 255
  80:	b5 d0       	rcall	.+362    	; 0x1ec <itoa>
  82:	ce 01       	movw	r24, r28
  84:	01 96       	adiw	r24, 0x01	; 1
  86:	e3 df       	rcall	.-58     	; 0x4e <uart_puts>
  88:	61 96       	adiw	r28, 0x11	; 17
  8a:	0f b6       	in	r0, 0x3f	; 63
  8c:	f8 94       	cli
  8e:	de bf       	out	0x3e, r29	; 62
  90:	0f be       	out	0x3f, r0	; 63
  92:	cd bf       	out	0x3d, r28	; 61
  94:	df 91       	pop	r29
  96:	cf 91       	pop	r28
  98:	08 95       	ret

0000009a <initSRAMControl>:
  9a:	81 b3       	in	r24, 0x11	; 17
  9c:	8c 61       	ori	r24, 0x1C	; 28
  9e:	81 bb       	out	0x11, r24	; 17
  a0:	82 b3       	in	r24, 0x12	; 18
  a2:	8c 60       	ori	r24, 0x0C	; 12
  a4:	82 bb       	out	0x12, r24	; 18
  a6:	94 98       	cbi	0x12, 4	; 18
  a8:	08 95       	ret

000000aa <initLatch1>:
  aa:	b8 9a       	sbi	0x17, 0	; 23
  ac:	c0 98       	cbi	0x18, 0	; 24
  ae:	08 95       	ret

000000b0 <initLatch2>:
  b0:	b9 9a       	sbi	0x17, 1	; 23
  b2:	c1 98       	cbi	0x18, 1	; 24
  b4:	08 95       	ret

000000b6 <dataPortOutput>:
  b6:	8f ef       	ldi	r24, 0xFF	; 255
  b8:	84 bb       	out	0x14, r24	; 20
  ba:	81 b3       	in	r24, 0x11	; 17
  bc:	80 66       	ori	r24, 0x60	; 96
  be:	81 bb       	out	0x11, r24	; 17
  c0:	08 95       	ret

000000c2 <dataPortInput>:
  c2:	80 ec       	ldi	r24, 0xC0	; 192
  c4:	84 bb       	out	0x14, r24	; 20
  c6:	81 b3       	in	r24, 0x11	; 17
  c8:	8f 79       	andi	r24, 0x9F	; 159
  ca:	81 bb       	out	0x11, r24	; 17
  cc:	08 95       	ret

000000ce <setAddress>:
  ce:	cf 93       	push	r28
  d0:	df 93       	push	r29
  d2:	00 d0       	rcall	.+0      	; 0xd4 <setAddress+0x6>
  d4:	cd b7       	in	r28, 0x3d	; 61
  d6:	de b7       	in	r29, 0x3e	; 62
  d8:	89 83       	std	Y+1, r24	; 0x01
  da:	9a 83       	std	Y+2, r25	; 0x02
  dc:	ec df       	rcall	.-40     	; 0xb6 <dataPortOutput>
  de:	20 ec       	ldi	r18, 0xC0	; 192
  e0:	25 bb       	out	0x15, r18	; 21
  e2:	32 b3       	in	r19, 0x12	; 18
  e4:	3f 79       	andi	r19, 0x9F	; 159
  e6:	32 bb       	out	0x12, r19	; 18
  e8:	45 b3       	in	r20, 0x15	; 21
  ea:	89 81       	ldd	r24, Y+1	; 0x01
  ec:	38 2f       	mov	r19, r24
  ee:	3f 73       	andi	r19, 0x3F	; 63
  f0:	34 2b       	or	r19, r20
  f2:	35 bb       	out	0x15, r19	; 21
  f4:	32 b3       	in	r19, 0x12	; 18
  f6:	80 7c       	andi	r24, 0xC0	; 192
  f8:	86 95       	lsr	r24
  fa:	83 2b       	or	r24, r19
  fc:	82 bb       	out	0x12, r24	; 18
  fe:	c0 9a       	sbi	0x18, 0	; 24
 100:	c0 98       	cbi	0x18, 0	; 24
 102:	25 bb       	out	0x15, r18	; 21
 104:	82 b3       	in	r24, 0x12	; 18
 106:	8f 79       	andi	r24, 0x9F	; 159
 108:	82 bb       	out	0x12, r24	; 18
 10a:	35 b3       	in	r19, 0x15	; 21
 10c:	9a 81       	ldd	r25, Y+2	; 0x02
 10e:	89 2f       	mov	r24, r25
 110:	8f 73       	andi	r24, 0x3F	; 63
 112:	83 2b       	or	r24, r19
 114:	85 bb       	out	0x15, r24	; 21
 116:	82 b3       	in	r24, 0x12	; 18
 118:	96 95       	lsr	r25
 11a:	98 2b       	or	r25, r24
 11c:	92 bb       	out	0x12, r25	; 18
 11e:	c1 9a       	sbi	0x18, 1	; 24
 120:	c1 98       	cbi	0x18, 1	; 24
 122:	25 bb       	out	0x15, r18	; 21
 124:	82 b3       	in	r24, 0x12	; 18
 126:	8f 79       	andi	r24, 0x9F	; 159
 128:	82 bb       	out	0x12, r24	; 18
 12a:	0f 90       	pop	r0
 12c:	0f 90       	pop	r0
 12e:	df 91       	pop	r29
 130:	cf 91       	pop	r28
 132:	08 95       	ret

00000134 <writeByte>:
 134:	cf 93       	push	r28
 136:	df 93       	push	r29
 138:	1f 92       	push	r1
 13a:	cd b7       	in	r28, 0x3d	; 61
 13c:	de b7       	in	r29, 0x3e	; 62
 13e:	89 83       	std	Y+1, r24	; 0x01
 140:	ba df       	rcall	.-140    	; 0xb6 <dataPortOutput>
 142:	20 ec       	ldi	r18, 0xC0	; 192
 144:	25 bb       	out	0x15, r18	; 21
 146:	92 b3       	in	r25, 0x12	; 18
 148:	9f 79       	andi	r25, 0x9F	; 159
 14a:	92 bb       	out	0x12, r25	; 18
 14c:	35 b3       	in	r19, 0x15	; 21
 14e:	89 81       	ldd	r24, Y+1	; 0x01
 150:	98 2f       	mov	r25, r24
 152:	9f 73       	andi	r25, 0x3F	; 63
 154:	93 2b       	or	r25, r19
 156:	95 bb       	out	0x15, r25	; 21
 158:	92 b3       	in	r25, 0x12	; 18
 15a:	80 7c       	andi	r24, 0xC0	; 192
 15c:	86 95       	lsr	r24
 15e:	89 2b       	or	r24, r25
 160:	82 bb       	out	0x12, r24	; 18
 162:	92 98       	cbi	0x12, 2	; 18
 164:	92 9a       	sbi	0x12, 2	; 18
 166:	25 bb       	out	0x15, r18	; 21
 168:	82 b3       	in	r24, 0x12	; 18
 16a:	8f 79       	andi	r24, 0x9F	; 159
 16c:	82 bb       	out	0x12, r24	; 18
 16e:	0f 90       	pop	r0
 170:	df 91       	pop	r29
 172:	cf 91       	pop	r28
 174:	08 95       	ret

00000176 <readByte>:
 176:	a5 df       	rcall	.-182    	; 0xc2 <dataPortInput>
 178:	93 98       	cbi	0x12, 3	; 18
 17a:	85 e0       	ldi	r24, 0x05	; 5
 17c:	8a 95       	dec	r24
 17e:	f1 f7       	brne	.-4      	; 0x17c <readByte+0x6>
 180:	00 00       	nop
 182:	93 b3       	in	r25, 0x13	; 19
 184:	80 b3       	in	r24, 0x10	; 16
 186:	80 76       	andi	r24, 0x60	; 96
 188:	88 0f       	add	r24, r24
 18a:	93 9a       	sbi	0x12, 3	; 18
 18c:	89 2b       	or	r24, r25
 18e:	08 95       	ret

00000190 <main>:
 190:	87 e6       	ldi	r24, 0x67	; 103
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	51 df       	rcall	.-350    	; 0x38 <initUSART>
 196:	89 df       	rcall	.-238    	; 0xaa <initLatch1>
 198:	8b df       	rcall	.-234    	; 0xb0 <initLatch2>
 19a:	80 e0       	ldi	r24, 0x00	; 0
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	97 df       	rcall	.-210    	; 0xce <setAddress>
 1a0:	7c df       	rcall	.-264    	; 0x9a <initSRAMControl>
 1a2:	c0 e0       	ldi	r28, 0x00	; 0
 1a4:	d0 e0       	ldi	r29, 0x00	; 0
 1a6:	ce 01       	movw	r24, r28
 1a8:	92 df       	rcall	.-220    	; 0xce <setAddress>
 1aa:	8c 2f       	mov	r24, r28
 1ac:	c3 df       	rcall	.-122    	; 0x134 <writeByte>
 1ae:	21 96       	adiw	r28, 0x01	; 1
 1b0:	c1 30       	cpi	r28, 0x01	; 1
 1b2:	80 e4       	ldi	r24, 0x40	; 64
 1b4:	d8 07       	cpc	r29, r24
 1b6:	b9 f7       	brne	.-18     	; 0x1a6 <main+0x16>
 1b8:	c0 e0       	ldi	r28, 0x00	; 0
 1ba:	d0 e0       	ldi	r29, 0x00	; 0
 1bc:	21 96       	adiw	r28, 0x01	; 1
 1be:	c1 15       	cp	r28, r1
 1c0:	90 e4       	ldi	r25, 0x40	; 64
 1c2:	d9 07       	cpc	r29, r25
 1c4:	19 f4       	brne	.+6      	; 0x1cc <main+0x3c>
 1c6:	81 e2       	ldi	r24, 0x21	; 33
 1c8:	3e df       	rcall	.-388    	; 0x46 <sendUSART>
 1ca:	ff cf       	rjmp	.-2      	; 0x1ca <main+0x3a>
 1cc:	ce 01       	movw	r24, r28
 1ce:	7f df       	rcall	.-258    	; 0xce <setAddress>
 1d0:	d2 df       	rcall	.-92     	; 0x176 <readByte>
 1d2:	6a e0       	ldi	r22, 0x0A	; 10
 1d4:	70 e0       	ldi	r23, 0x00	; 0
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	45 df       	rcall	.-374    	; 0x64 <uart_putint>
 1da:	8d e2       	ldi	r24, 0x2D	; 45
 1dc:	34 df       	rcall	.-408    	; 0x46 <sendUSART>
 1de:	8f e9       	ldi	r24, 0x9F	; 159
 1e0:	9f e0       	ldi	r25, 0x0F	; 15
 1e2:	01 97       	sbiw	r24, 0x01	; 1
 1e4:	f1 f7       	brne	.-4      	; 0x1e2 <main+0x52>
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <main+0x58>
 1e8:	00 00       	nop
 1ea:	e8 cf       	rjmp	.-48     	; 0x1bc <main+0x2c>

000001ec <itoa>:
 1ec:	45 32       	cpi	r20, 0x25	; 37
 1ee:	51 05       	cpc	r21, r1
 1f0:	18 f4       	brcc	.+6      	; 0x1f8 <itoa+0xc>
 1f2:	42 30       	cpi	r20, 0x02	; 2
 1f4:	08 f0       	brcs	.+2      	; 0x1f8 <itoa+0xc>
 1f6:	04 c0       	rjmp	.+8      	; 0x200 <__itoa_ncheck>
 1f8:	fb 01       	movw	r30, r22
 1fa:	10 82       	st	Z, r1
 1fc:	cb 01       	movw	r24, r22
 1fe:	08 95       	ret

00000200 <__itoa_ncheck>:
 200:	bb 27       	eor	r27, r27
 202:	4a 30       	cpi	r20, 0x0A	; 10
 204:	31 f4       	brne	.+12     	; 0x212 <__itoa_ncheck+0x12>
 206:	99 23       	and	r25, r25
 208:	22 f4       	brpl	.+8      	; 0x212 <__itoa_ncheck+0x12>
 20a:	bd e2       	ldi	r27, 0x2D	; 45
 20c:	90 95       	com	r25
 20e:	81 95       	neg	r24
 210:	9f 4f       	sbci	r25, 0xFF	; 255
 212:	01 c0       	rjmp	.+2      	; 0x216 <__utoa_common>

00000214 <__utoa_ncheck>:
 214:	bb 27       	eor	r27, r27

00000216 <__utoa_common>:
 216:	fb 01       	movw	r30, r22
 218:	55 27       	eor	r21, r21
 21a:	aa 27       	eor	r26, r26
 21c:	88 0f       	add	r24, r24
 21e:	99 1f       	adc	r25, r25
 220:	aa 1f       	adc	r26, r26
 222:	a4 17       	cp	r26, r20
 224:	10 f0       	brcs	.+4      	; 0x22a <__utoa_common+0x14>
 226:	a4 1b       	sub	r26, r20
 228:	83 95       	inc	r24
 22a:	50 51       	subi	r21, 0x10	; 16
 22c:	b9 f7       	brne	.-18     	; 0x21c <__utoa_common+0x6>
 22e:	a0 5d       	subi	r26, 0xD0	; 208
 230:	aa 33       	cpi	r26, 0x3A	; 58
 232:	08 f0       	brcs	.+2      	; 0x236 <__utoa_common+0x20>
 234:	a9 5d       	subi	r26, 0xD9	; 217
 236:	a1 93       	st	Z+, r26
 238:	00 97       	sbiw	r24, 0x00	; 0
 23a:	79 f7       	brne	.-34     	; 0x21a <__utoa_common+0x4>
 23c:	b1 11       	cpse	r27, r1
 23e:	b1 93       	st	Z+, r27
 240:	11 92       	st	Z+, r1
 242:	cb 01       	movw	r24, r22
 244:	00 c0       	rjmp	.+0      	; 0x246 <strrev>

00000246 <strrev>:
 246:	dc 01       	movw	r26, r24
 248:	fc 01       	movw	r30, r24
 24a:	67 2f       	mov	r22, r23
 24c:	71 91       	ld	r23, Z+
 24e:	77 23       	and	r23, r23
 250:	e1 f7       	brne	.-8      	; 0x24a <strrev+0x4>
 252:	32 97       	sbiw	r30, 0x02	; 2
 254:	04 c0       	rjmp	.+8      	; 0x25e <strrev+0x18>
 256:	7c 91       	ld	r23, X
 258:	6d 93       	st	X+, r22
 25a:	70 83       	st	Z, r23
 25c:	62 91       	ld	r22, -Z
 25e:	ae 17       	cp	r26, r30
 260:	bf 07       	cpc	r27, r31
 262:	c8 f3       	brcs	.-14     	; 0x256 <strrev+0x10>
 264:	08 95       	ret

00000266 <_exit>:
 266:	f8 94       	cli

00000268 <__stop_program>:
 268:	ff cf       	rjmp	.-2      	; 0x268 <__stop_program>
